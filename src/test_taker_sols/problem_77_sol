def solution(s, n):
    import re
    from math import factorial

    def bell_number(k):
        bell = [[0 for _ in range(k + 1)] for _ in range(k + 1)]
        bell[0][0] = 1
        
        for i in range(1, k + 1):
            bell[i][0] = bell[i - 1][i - 1]
            for j in range(1, i + 1):
                bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]

        return bell[k][0]

    words = re.findall(r'[A-Z][a-z]*', s)
    word_count = len(words)

    if word_count % 2 == 0:
        return bell_number(word_count)
    else:
        matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 0]]
        unique_digits = set()
        for row in matrix:
            if n < len(row):
                unique_digits.add(row[n])
        return sum(unique_digits)