def solution(matrix, n):
    def bell_number(n):
        bell = [[0 for _ in range(n + 1)] for _ in range(n + 1)]
        bell[0][0] = 1
        for i in range(1, n + 1):
            bell[i][0] = bell[i - 1][i - 1]
            for j in range(1, i + 1):
                bell[i][j] = bell[i - 1][j - 1] + bell[i][j - 1]
        return [bell[i][0] for i in range(n + 1)]
    
    if len(matrix) == 0 or n >= len(matrix[0]):
        return 0

    max_n = max(len(matrix), n + 1)
    bell_numbers = bell_number(max_n)
    return sum(bell_numbers[matrix[i][n]] for i in range(len(matrix)) if n < len(matrix[i]))