def solution(s1, s2):
    def heapify(arr, n, i):
        largest = i
        l = 2 * i + 1
        r = 2 * i + 2
        if l < n and arr[l] > arr[largest]:
            largest = l
        if r < n and arr[r] > arr[largest]:
            largest = r
        if largest != i:
            arr[i], arr[largest] = arr[largest], arr[i]
            heapify(arr, n, largest)

    def heap_sort(arr):
        n = len(arr)
        for i in range(n // 2 - 1, -1, -1):
            heapify(arr, n, i)
        for i in range(n - 1, 0, -1):
            arr[i], arr[0] = arr[0], arr[i]
            heapify(arr, i, 0)

    if len(s1) != len(s2):
        return None

    mapping = {}
    for char1, char2 in zip(s1, s2):
        if char1 in mapping:
            if mapping[char1] != char2:
                return None
        else:
            reverse_mapping = {v: k for k, v in mapping.items()}
            if char2 in reverse_mapping and reverse_mapping[char2] != char1:
                return None
            mapping[char1] = char2

    sorted_s1 = list(s1)
    sorted_s2 = list(s2)
    heap_sort(sorted_s1)
    heap_sort(sorted_s2)

    return ''.join(sorted_s1), ''.join(sorted_s2)