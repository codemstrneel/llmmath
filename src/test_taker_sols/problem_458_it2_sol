def solution(lst):
    import math
    sums = []
    for i in range(len(lst)):
        current_sum = 0
        for j in range(i, len(lst)):
            current_sum += lst[j]
            sums.append(current_sum)
    n = len(sums)
    if n == 0:
        return []
    side = int(math.ceil(n**0.5))
    matrix = [[0]*side for _ in range(side)]
    idx, top, left, bottom, right = 0, 0, 0, side-1, side-1
    while top <= bottom and left <= right:
        for col in range(left, right+1):
            if idx < n:
                matrix[top][col] = sums[idx]
                idx += 1
        top += 1
        for row in range(top, bottom+1):
            if idx < n:
                matrix[row][right] = sums[idx]
                idx += 1
        right -= 1
        if top <= bottom:
            for col in range(right, left-1, -1):
                if idx < n:
                    matrix[bottom][col] = sums[idx]
                    idx += 1
            bottom -= 1
        if left <= right:
            for row in range(bottom, top-1, -1):
                if idx < n:
                    matrix[row][left] = sums[idx]
                    idx += 1
            left += 1
    return matrix