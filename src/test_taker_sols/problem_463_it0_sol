def solution(n):
    if n < 2:
        return False
    matrix = [[0]*n for _ in range(n)]
    num, top, left, bottom, right = 1, 0, 0, n-1, n-1
    while num <= n*n:
        for c in range(left, right+1):
            matrix[top][c] = num
            num += 1
        top += 1
        for r in range(top, bottom+1):
            matrix[r][right] = num
            num += 1
        right -= 1
        if top <= bottom:
            for c in range(right, left-1, -1):
                matrix[bottom][c] = num
                num += 1
            bottom -= 1
        if left <= right:
            for r in range(bottom, top-1, -1):
                matrix[r][left] = num
                num += 1
            left += 1
    corners = [matrix[0][0], matrix[0][n-1], matrix[n-1][n-1], matrix[n-1][0]]
    s = sorted(corners, reverse=True)
    return s[0] > s[1] > s[2] > s[3]