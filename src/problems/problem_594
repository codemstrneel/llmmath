QUESTION

Write a function to calculate the volume of a frustum of a cone.

SOL & TESTS

To solve this problem, we need to calculate the volume of a frustum of a cone using its known formula. Given the radii of the top and bottom (r1 and r2) and the height (h) of the frustum, the volume \( V \) of the frustum is calculated as:

\[ V = \frac{1}{3} \pi h (r_1^2 + r_2^2 + r_1 r_2) \]

We'll implement this formula in a Python function and create unit tests to verify its accuracy.

<|Solution Begin|> 
```python
import math

def volume_of_frustum(r1, r2, h):
    """
    Calculate the volume of a frustum of a cone.
    
    Parameters:
    - r1: Top radius of the frustum.
    - r2: Bottom radius of the frustum.
    - h: Height of the frustum.
    
    Returns:
    - Volume of the frustum.
    """
    return (1/3) * math.pi * h * (r1**2 + r2**2 + r1 * r2)
```
<|Solution End|>

<|Test Begin|> 
```python
from solution import volume_of_frustum
import math

def test_volume_with_same_radius():
    # A cylinder is essentially a frustum with r1 = r2
    r = 3
    h = 5
    expected_volume = math.pi * r**2 * h  # Volume of a cylinder
    assert math.isclose(volume_of_frustum(r, r, h), expected_volume, rel_tol=1e-9)

def test_volume_of_standard_frustum():
    # Use known values for a frustum with r1=3, r2=4, h=5
    r1 = 3
    r2 = 4
    h = 5
    expected_volume = (1/3) * math.pi * h * (r1**2 + r2**2 + r1 * r2)
    assert math.isclose(volume_of_frustum(r1, r2, h), expected_volume, rel_tol=1e-9)

def test_volume_with_zero_height():
    # A frustum with zero height should have zero volume
    assert volume_of_frustum(3, 4, 0) == 0

def test_volume_with_zero_radii():
    # A frustum with either radius as zero is not possible, so should expect zero volume conceptually
    assert volume_of_frustum(0, 4, 5) == 0
    assert volume_of_frustum(3, 0, 5) == 0

def test_volume_with_large_numbers():
    # Test frustum volume with large radii and height
    r1, r2, h = 1000, 2000, 10000
    expected_volume = (1/3) * math.pi * h * (r1**2 + r2**2 + r1 * r2)
    assert math.isclose(volume_of_frustum(r1, r2, h), expected_volume, rel_tol=1e-9)
```
<|Test End|>