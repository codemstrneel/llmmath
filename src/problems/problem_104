QUESTION

Create a Python function that takes two lists of equal length and a tuple of indices. The function should return two results:

1. A new list by dividing elements of the first list by the corresponding elements of the second list using `map` and `lambda`.

2. A list of the maximum elements of the resulting divisions at the specified tuple indices.

Ensure the function handles division by zero by skipping those divisions.

SOL & TESTS

<|Solution Begin|>
```python
def divide_and_max_lists(list1, list2, indices):
    """
    Divides elements of list1 by elements of list2 and returns the results
    along with a list of maximum values from resulting divisions at specified indices.
    
    :param list1: List of numerators.
    :param list2: List of denominators.
    :param indices: Tuple of indices to extract the maximum values.
    :returns: Tuple containing the divided results list and the maximum elements list.
    """
    # Divide elements in list1 by elements in list2, handle division by zero
    divisions = list(map(lambda x, y: x / y if y != 0 else None, list1, list2))
    
    # Extract non-None values at the specified indices and calculate the max
    max_values = [max(divisions[index] for index in indices if divisions[index] is not None)]
    
    return divisions, max_values
```
<|Solution End|>

<|Test Begin|>
```python
from solution import divide_and_max_lists

def test_divide_and_max_lists_basic_case():
    list1 = [10, 20, 30]
    list2 = [2, 5, 6]
    indices = (0, 1, 2)
    divisions, max_values = divide_and_max_lists(list1, list2, indices)
    assert divisions == [5.0, 4.0, 5.0]
    assert max_values == [5.0]

def test_divide_and_max_lists_include_zero_divisor():
    list1 = [10, 20, 30]
    list2 = [0, 5, 10]
    indices = (0, 1, 2)
    divisions, max_values = divide_and_max_lists(list1, list2, indices)
    assert divisions == [None, 4.0, 3.0]
    assert max_values == [4.0]

def test_divide_and_max_lists_multiple_indices():
    list1 = [15, 45, 75, 120]
    list2 = [5, 9, 15, 0]
    indices = (0, 2, 3)
    divisions, max_values = divide_and_max_lists(list1, list2, indices)
    assert divisions == [3.0, 5.0, 5.0, None]
    assert max_values == [5.0]

def test_divide_and_max_lists_all_zero_denominators():
    list1 = [10, 20, 30]
    list2 = [0, 0, 0]
    indices = (0, 1, 2)
    divisions, max_values = divide_and_max_lists(list1, list2, indices)
    assert divisions == [None, None, None]
    assert max_values == []

def test_divide_and_max_lists_mixed_values_and_indices():
    list1 = [12, 15, 24, 30]
    list2 = [3, 5, 0, 6]
    indices = (1, 3)
    divisions, max_values = divide_and_max_lists(list1, list2, indices)
    assert divisions == [4.0, 3.0, None, 5.0]
    assert max_values == [5.0]
```
<|Test End|>