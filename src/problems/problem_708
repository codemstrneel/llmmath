QUESTION

**Question 6:**

Write a function that processes a given string to achieve the following two tasks combined:

1. Extract all sequences from the string where a word or sequence of words starts with one uppercase letter and the rest are lowercase letters. Use a regular expression approach for identifying these sequences.
   
2. For each extracted sequence from task 1, determine if the total number of characters in the sequence is odd, indicating odd parity. Return a list of tuples where each tuple contains the extracted sequence and a boolean indicating whether it has odd character parity.

For example, given the string "Hello there, Amazing People of The World", the function should return:

```python
[('Hello', False), ('Amazing', False), ('People', False), ('The', True), ('World', False)]
```

Note: Each extracted sequence includes whitespace-separated words starting with an uppercase letter as a single sequence.

SOL & TESTS

<|Solution Begin|>
```python
import re

def process_string(input_string):
    """
    Processes the input string to extract sequences of words starting with an uppercase letter
    and determines if the total number of characters in each sequence is odd.

    Args:
        input_string (str): The input string to process.

    Returns:
        list of tuples: A list of tuples where each tuple contains the sequence and a boolean
                        indicating whether the number of characters in the sequence is odd.
    """
    # Regular expression to find sequences of words starting with an uppercase letter
    pattern = r'\b[A-Z][a-z]*'

    # Find all matches in the input string
    matches = re.findall(pattern, input_string)
    
    # Prepare the result list with (sequence, is_odd) for each match
    result = [(match, len(match) % 2 != 0) for match in matches]
    
    return result
```
<|Solution End|>

<|Test Begin|>
```python
from solution import process_string

def test_basic_example():
    input_str = "Hello there, Amazing People of The World"
    expected_result = [('Hello', False), ('Amazing', False), ('People', False), ('The', True), ('World', False)]
    assert process_string(input_str) == expected_result

def test_no_matches():
    input_str = "there are no matches here"
    expected_result = []
    assert process_string(input_str) == expected_result

def test_single_word():
    input_str = "Python"
    expected_result = [('Python', False)]
    assert process_string(input_str) == expected_result

def test_all_single_letter():
    input_str = "A B C D E"
    expected_result = [('A', True), ('B', True), ('C', True), ('D', True), ('E', True)]
    assert process_string(input_str) == expected_result

def test_mixed_case_words():
    input_str = "Python is Fun And Useful"
    expected_result = [('Python', False), ('Fun', True), ('And', True), ('Useful', False)]
    assert process_string(input_str) == expected_result
```
<|Test End|>