QUESTION

Write a Python function that calculates the maximum sum of absolute differences between consecutive elements in a given array without sorting it.

SOL & TESTS

To solve the problem of finding the maximum sum of absolute differences between consecutive elements in an array without sorting, we need to perform the following steps:

1. **Understanding the Problem:**
   - We have an array of integers. Our task is to calculate the maximum sum of absolute differences between consecutive elements as the array exists, without rearranging or sorting the array.

2. **Approach:**
   - We iterate through the array, calculating the absolute difference between each pair of consecutive elements.
   - Sum up these absolute differences to get the result.

By keeping the existing order of elements, we ensure adherence to the constraint of not sorting or rearranging the input array.

Let's implement this in Python.

<|Solution Begin|>
```python
def max_sum_absolute_differences(arr):
    """
    Calculates the sum of absolute differences between consecutive elements
    in the given list.
    
    :param arr: List[int], list of integers
    :return: int, sum of absolute differences
    """
    if not arr or len(arr) < 2:
        return 0
    
    total_sum = 0
    for i in range(1, len(arr)):
        total_sum += abs(arr[i] - arr[i - 1])
    
    return total_sum
```
<|Solution End|>

Next, we will create unit tests to verify that our implementation works correctly.

<|Test Begin|>
```python
# Import the function from the solution file
# from solution import max_sum_absolute_differences

def test_empty_array():
    assert max_sum_absolute_differences([]) == 0

def test_single_element_array():
    assert max_sum_absolute_differences([5]) == 0

def test_two_elements_array():
    assert max_sum_absolute_differences([1, 3]) == 2
    assert max_sum_absolute_differences([3, 1]) == 2

def test_multiple_elements_pos():
    assert max_sum_absolute_differences([1, 3, 6]) == 5
    assert max_sum_absolute_differences([10, 1, 2, 10]) == 19

def test_multiple_elements_neg():
    assert max_sum_absolute_differences([-1, -3, -6]) == 5
    assert max_sum_absolute_differences([-10, -4, -2, -10]) == 16

def test_mixed_elements():
    assert max_sum_absolute_differences([-5, 5, -5, 5]) == 30
    assert max_sum_absolute_differences([0, -1, 2, -3, 4, -5]) == 18

def test_identical_elements():
    assert max_sum_absolute_differences([7, 7, 7, 7]) == 0
```
<|Test End|>

- The test cases include scenarios like empty arrays, arrays with a single element, arrays with two elements, and arrays with multiple elements having both positive and negative numbers.
- Each test validates different types of input to ensure the function behaves as expected.