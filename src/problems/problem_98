QUESTION

Write a function to calculate the lateral surface area of a cone. Extend it to compute the curved surface area of a cylinder instead.

SOLUTION/TESTS

<|Solution Begin|>
import math

def solution(shape, radius, height, slant_height=None):
    """
    Calculates the lateral surface area of a cone or curved surface area of a cylinder.
    
    Parameters:
    shape (str): 'cone' for calculating the lateral surface area of a cone, 
                 'cylinder' for calculating the curved surface area of a cylinder.
    radius (float): The radius of the base of the cone or cylinder.
    height (float): The height of the cylinder, or height of the cone (used if slant_height not provided).
    slant_height (float): The slant height of the cone (optional, required only for cone).
    
    Returns:
    float: The lateral surface area of a cone or curved surface area of a cylinder.
    """
    if shape == "cone":
        if slant_height is None:
            # calculate slant height using Pythagorean theorem if not provided
            slant_height = math.sqrt(radius**2 + height**2)
        return math.pi * radius * slant_height
    elif shape == "cylinder":
        return 2 * math.pi * radius * height
    else:
        raise ValueError("Invalid shape. Accepted values are 'cone' and 'cylinder'.")
<|Solution End|>

<|Test Begin|>
from solution import solution

def test_lateral_surface_area_cone_with_slant_height():
    assert solution('cone', radius=3, height=0, slant_height=5) == pytest.approx(47.12385, rel=1e-5)

def test_lateral_surface_area_cone_with_calculated_slant_height():
    assert solution('cone', radius=3, height=4) == pytest.approx(47.12385, rel=1e-5)

def test_curved_surface_area_cylinder():
    assert solution('cylinder', radius=3, height=5) == pytest.approx(94.24780, rel=1e-5)

def test_invalid_shape():
    try:
        solution('sphere', radius=3, height=5)
        assert False, "Expected ValueError for invalid shape"
    except ValueError as e:
        assert str(e) == "Invalid shape. Accepted values are 'cone' and 'cylinder'."
<|Test End|>