QUESTION

Write a function that takes a list of lists where each sublist contains numbers and the elements are either 0, 1, or 2. For each sublist, first, reverse it, then replace each occurrence of the number 0 with the string '%20'. Finally, return a new list of lists with these modified sublists.

SOLUTION/TESTS

<|Solution Begin|>
def solution(list_of_lists):
    """
    Takes a list of lists and performs the following transformations on each sublist:
    1. Reverse the sublist.
    2. Replace each occurrence of 0 with the string '%20'.

    Parameters:
    list_of_lists (list): A list of lists with numbers 0, 1, or 2.

    Returns:
    list: A list of lists with the described transformations applied.
    """
    # Create a new list to store the modified sublists
    result = []
    
    # Iterate over each sublist
    for sublist in list_of_lists:
        # Reverse the sublist
        reversed_sublist = sublist[::-1]
        # Replace 0 with '%20'
        modified_sublist = ['%20' if x == 0 else x for x in reversed_sublist]
        # Add the modified sublist to the result list
        result.append(modified_sublist)
    
    return result
<|Solution End|>

<|Test Begin|>
def test_solution():
    # Test with all elements being zeros
    assert solution([[0, 0, 0]]) == [['%20', '%20', '%20']]
    # Test with all elements being a mix of 0, 1, 2
    assert solution([[0, 1, 2]]) == [[2, 1, '%20']]
    # Test with all elements being 1s
    assert solution([[1, 1, 1]]) == [[1, 1, 1]]
    # Test with all elements being 2s
    assert solution([[2, 2, 2]]) == [[2, 2, 2]]
    # Test with a mix of sublists
    assert solution([[0, 1, 2], [1, 2, 1], [0, 0, 1]]) == [[2, 1, '%20'], [1, 2, 1], [1, '%20', '%20']]
    # Test with empty sublist
    assert solution([[]]) == [[]]
    # Test with multiple empty sublists
    assert solution([[], []]) == [[], []]
    
test_solution()
<|Test End|>