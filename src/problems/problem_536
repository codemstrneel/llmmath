QUESTION

Write a function to find an item that occurs at least twice in a given list.

SOL & TESTS

```python
<|Solution Begin|>
def find_first_repeated_item(lst):
    """
    Returns the first item that occurs at least twice in the given list.
    If no such item exists, returns None.
    
    :param lst: List of items
    :return: First repeated item or None
    """
    seen = set()
    for item in lst:
        if item in seen:
            return item
        seen.add(item)
    return None
<|Solution End|>
```

```python
<|Test Begin|>
from solution import find_first_repeated_item

def test_no_repetition():
    assert find_first_repeated_item([1, 2, 3, 4, 5]) is None

def test_single_repetition():
    assert find_first_repeated_item([1, 2, 3, 2, 5]) == 2

def test_multiple_repetitions():
    assert find_first_repeated_item([1, 3, 2, 3, 1]) == 3
    assert find_first_repeated_item(['a', 'b', 'a', 'c']) == 'a'

def test_immediate_repetition():
    assert find_first_repeated_item([1, 1, 2, 3, 4]) == 1

def test_empty_list():
    assert find_first_repeated_item([]) is None

def test_all_same_elements():
    assert find_first_repeated_item([2, 2, 2]) == 2

def test_large_case():
    assert find_first_repeated_item(list(range(10000)) + [0]) == 0
<|Test End|>
```