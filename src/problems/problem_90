QUESTION

Write a function to determine the maximum of three numbers.

SOL & TESTS

## Solution

To find the maximum of three numbers, we can simply compare the numbers using Python's built-in functionality. The `max` function can be used to directly determine which number is the largest. Alternatively, we could manually compare each number and determine the largest, but using `max` is more concise and efficient.

<|Solution Begin|> 
```python
def max_of_three(a, b, c):
    """
    Returns the maximum of three numbers a, b, and c.
    """
    return max(a, b, c)
```
<|Solution End|>

## Unit Tests

Below are unit tests using the pytest framework, which independently check various scenarios to ensure the function behaves correctly.

<|Test Begin|>
```python
from solution import max_of_three

def test_max_of_three_all_positive():
    assert max_of_three(1, 2, 3) == 3
    assert max_of_three(3, 2, 1) == 3
    assert max_of_three(2, 3, 1) == 3

def test_max_of_three_with_negative():
    assert max_of_three(-1, -2, -3) == -1
    assert max_of_three(-3, -2, -1) == -1
    assert max_of_three(-1, 0, 1) == 1

def test_max_of_three_mixed_signs():
    assert max_of_three(-10, 5, 3) == 5
    assert max_of_three(10, -5, 3) == 10
    assert max_of_three(0, -5, 3) == 3

def test_max_of_three_with_zeros():
    assert max_of_three(0, 0, 0) == 0
    assert max_of_three(0, 1, 0) == 1
    assert max_of_three(-1, 0, -2) == 0

def test_max_of_three_all_equal():
    assert max_of_three(2, 2, 2) == 2
    assert max_of_three(-3, -3, -3) == -3
```
<|Test End|>