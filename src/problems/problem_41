QUESTION

Write a Python function that takes a dictionary where the keys are month names and the values are nested tuples containing strings. The function should return a count of the occurrences of a specific lowercase letter in the strings of those months that have 31 days.

SOLUTION/TESTS

```python
<|Solution Begin|>
def solution(month_data, letter):
    """
    Counts occurrences of a specific letter in month names
    with 31 days from a given dictionary.

    :param month_data: Dictionary where keys are month names and values are nested tuples of strings
    :param letter: Specific lowercase letter to count occurrences of
    :return: Total count of the specific letter in month strings for months with 31 days
    """
    # Define months with 31 days
    months_with_31_days = {"January", "March", "May", "July", "August", "October", "December"}
    count = 0
    
    for month, data in month_data.items():
        if month in months_with_31_days:
            for text in data:
                count += text.count(letter)
    
    return count
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_no_occurrences():
    month_data = {
        "January": ("abc", "def"),
        "February": ("ghi", "jkl"),
        "March": ("mnop", "qrst"),
    }
    assert solution(month_data, 'z') == 0

def test_all_months_31_days():
    month_data = {
        "January": ("a", "a"),
        "March": ("b", "b"),
        "May": ("c", "c"),
        "July": ("d", "d"),
        "August": ("e", "e"),
        "October": ("f", "f"),
        "December": ("g", "g"),
    }
    assert solution(month_data, 'a') == 2
    assert solution(month_data, 'b') == 2
    assert solution(month_data, 'c') == 2
    assert solution(month_data, 'd') == 2

def test_mixed_months():
    month_data = {
        "January": ("apple", "banana"),
        "February": ("cherry", "date"),
        "March": ("eggplant", "fig"),
        "April": ("grape",),
    }
    assert solution(month_data, 'a') == 6  # "January": "apple", "banana"; "March": "eggplant"; total: 3 + 3 = 6

def test_empty_strings():
    month_data = {
        "January": ("", ""),
        "February": ("",),
        "March": ("", ""),
    }
    assert solution(month_data, 'a') == 0

def test_non_31_days_months():
    month_data = {
        "February": ("apple", "banana"),
        "April": ("carrot", "date"),
        "June": ("egg",),
        "September": ("fig",),
        "November": ("grape",),
    }
    assert solution(month_data, 'a') == 0

def test_mixed_case_letters():
    month_data = {
        "January": ("Apple", "BanAna"),
        "February": ("Cherry", "daTe"),
        "March": ("Eggplant", "Fig"),
        "July": ("grApe",),
    }
    assert solution(month_data, 'a') == 4  # "a" occurs 4 times in specified months

<|Test End|>
```