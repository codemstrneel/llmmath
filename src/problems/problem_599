QUESTION

Create a Python function that accepts a list of strings and an integer `n`. Each string represents a list of comma-separated integers. The function should perform the following steps:

1. Reverse the order of the list of strings.
2. For each string in the reversed list, convert it into a list of integers.
3. Identify and keep only the even numbers from each list.
4. Find the sum of all the even numbers from all lists.
5. Return the sum as a hexadecimal string.

SOL & TESTS

<|Solution Begin|>
```python
def sum_of_evens_as_hexadecimal(strings, n):
    """
    Takes a list of strings, each representing comma-separated integers,
    reverses the order of strings, converts them to integer lists,
    keeps even numbers only, and returns the sum of all even numbers
    in hexadecimal format.
    
    :param strings: List of strings with comma-separated integers
    :param n: Unused integer parameter
    :return: Sum of all even integers as a hexadecimal string
    """
    reversed_strings = strings[::-1]
    total_sum = 0

    for string in reversed_strings:
        numbers = map(int, string.split(','))
        even_numbers = filter(lambda x: x % 2 == 0, numbers)
        total_sum += sum(even_numbers)
    
    return hex(total_sum)
```
<|Solution End|>
<|Test Begin|>
```python
from solution import sum_of_evens_as_hexadecimal

def test_single_list_with_only_evens():
    assert sum_of_evens_as_hexadecimal(["2,4,6,8"], 1) == "0x14"

def test_single_list_with_no_evens():
    assert sum_of_evens_as_hexadecimal(["1,3,5,7"], 1) == "0x0"

def test_multiple_lists():
    assert sum_of_evens_as_hexadecimal(["8,6,7,5,3,0,9", "10,11,12", "5,4,3,2,1"], 3) == "0x26"

def test_empty_list():
    assert sum_of_evens_as_hexadecimal([], 0) == "0x0"

def test_lists_with_mixed_numbers():
    assert sum_of_evens_as_hexadecimal(["1,2,3", "4,5,6", "7,8,9,10"], 3) == "0x24"

def test_lists_with_one_large_even_number():
    assert sum_of_evens_as_hexadecimal(["1000000"], 1) == "0xf4240"

def test_multiple_empty_strings():
    assert sum_of_evens_as_hexadecimal(["", "", ""], 3) == "0x0"
```
<|Test End|>