QUESTION

Write a Python function that takes two inputs: a list of strings and a target character. The function should convert each string into a list of words by inserting spaces before each capital letter. Then, it should count how many strings contain a word that starts with the target character.

SOLUTION/TESTS

<|Solution Begin|>
def solution(strings, target):
    """
    Takes a list of strings and a target character. For each string, splits the string
    into words by inserting spaces before each capital letter, then counts how many
    strings contain a word that starts with the target character.
    
    :param strings: List of strings.
    :param target: Target character.
    :return: Number of strings containing a word starting with the target character.
    """
    def split_camel_case(s):
        # Split the string at every capital letter and keep the uppercase letter with its word
        return ''.join([' '+c if c.isupper() else c for c in s]).strip()
    
    count = 0
    
    for s in strings:
        words = split_camel_case(s).split()
        if any(word.startswith(target) for word in words):
            count += 1
    
    return count
<|Solution End|>
<|Test Begin|>
def test_solution_example_case():
    assert solution(["CamelCase", "AnotherExample", "definitelyNotHere"], 'C') == 2

def test_solution_mixed_case():
    assert solution(["CamelCase", "exampleAnotherOne", "yayStart", "NewTest"], 'N') == 2
    
def test_solution_no_target_words():
    assert solution(["exampleNoMatch", "anotherOne", "yetAnother"], 'Z') == 0
    
def test_solution_all_start_with_target():
    assert solution(["AceIsTheBest", "AlwaysThere", "AheadOfTime"], 'A') == 3

def test_solution_empty_strings():
    assert solution([], 'C') == 0

def test_solution_no_upper_case():
    assert solution(["nocaps", "stillnocaps", "nonehereeither"], 'n') == 3
    
def test_solution_target_special_chars():
    assert solution(["Weird&Case", "Case-Of", "Target$Here"], '&') == 1
    
def test_solution_empty_target():
    assert solution(["SomeCamelCase", "OtherCase"], '') == 0  # Edge case: empty target does not match any character
<|Test End|>