QUESTION

New Question: Write a Python function to combine a list of single lowercase alphabetical characters into a single string, where each character is repeated a number of times equal to its position in the alphabet.

SOLUTION/TESTS

<|Solution Begin|>
def solution(char_list):
    """
    Combine a list of single lowercase alphabetical characters into a
    string where each character is repeated a number of times equal to
    its position in the alphabet.
    """
    result = []
    for char in char_list:
        position = ord(char) - ord('a') + 1
        result.append(char * position)
    return ''.join(result)
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_solution_single_character():
    assert solution(['a']) == 'a'
    assert solution(['c']) == 'ccc'
    assert solution(['z']) == 'zzzzzzzzzzzzzzzzzzzzzzzzzzz'  # 26 times

def test_solution_multiple_characters():
    assert solution(['a', 'b', 'c']) == 'abbccc'
    assert solution(['e', 'd', 'c']) == 'eeedddccc'
    
def test_solution_repeated_characters():
    assert solution(['a', 'a', 'a']) == 'aaa'
    assert solution(['b', 'b', 'b']) == 'bbbbbb'

def test_solution_empty_list():
    assert solution([]) == ''

def test_solution_combination():
    assert solution(['m', 'n', 'o', 'p']) == (
        'mmmmmmmmmmmmnnnnnnnnnnnnn'
        'oooooooooooooooooooooooo'
        'pppppppppppppppppppppppppp')
<|Test End|>