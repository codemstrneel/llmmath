QUESTION

Write a Python function that takes two inputs: the first input is a sorted list with one extra element as compared to a second sorted list, and the second input is a list of dictionaries. Each dictionary contains a single key-value pair, where the key is a string and the value is a list of numeric values. The function should return two results: the index of the extra element in the first list, and a list of the keys from the dictionaries, sorted in descending order based on the sum of the numeric values in their corresponding lists.

SOLUTION/TESTS

<|Solution Begin|>
def solution(sorted_list, dict_list):
    # Find the index of the extra element in the first sorted list
    def find_extra_index(long_list, short_list):
        left, right = 0, len(long_list) - 1
        while left <= right:
            mid = (left + right) // 2
            # Check if the mid element is the extra element
            if mid >= len(short_list) or long_list[mid] != short_list[mid]:
                if mid == 0 or long_list[mid - 1] == short_list[mid - 1]:
                    return mid
                right = mid - 1
            else:
                left = mid + 1
        return -1
    
    # Sort the keys based on sum of values in descending order
    def sort_dict_keys(dict_list):
        key_sums = {}
        for dictionary in dict_list:
            for key, values in dictionary.items():
                key_sums[key] = sum(values)
        sorted_keys = sorted(key_sums, key=key_sums.get, reverse=True)
        return sorted_keys
    
    extra_index = find_extra_index(sorted_list, sorted_list[:-1])
    sorted_keys = sort_dict_keys(dict_list)
    
    return extra_index, sorted_keys
<|Solution End|>
<|Test Begin|>
def test_find_extra_element_and_sort_keys():
    sorted_list_1 = [1, 3, 4, 5, 6]
    sorted_list_2 = [1, 3, 4, 5]
    dict_list = [
        {'a': [1, 2, 3]},
        {'b': [4, 5]},
        {'c': [1, 1, 1, 1]}
    ]
    extra_index, sorted_keys = solution(sorted_list_1, [1, 3, 4, 5])
    assert extra_index == 4
    assert sorted_keys == ['b', 'a', 'c']

def test_extra_at_start():
    sorted_list_1 = [0, 2, 4, 6, 8]
    sorted_list_2 = [2, 4, 6, 8]
    dict_list = [
        {'x': [2, 2]},
        {'y': [1, 1, 1, 1]},
        {'z': [3, 3, 3]}
    ]
    extra_index, sorted_keys = solution(sorted_list_1, sorted_list_2)
    assert extra_index == 0
    assert sorted_keys == ['z', 'y', 'x']

def test_combined_cases():
    sorted_list_1 = [-5, 0, 2, 3, 9]
    sorted_list_2 = [-5, 0, 3, 9]
    dict_list = [
        {'key1': [50]},
        {'key2': [10, 20]},
        {'key3': [25, 15]}
    ]
    extra_index, sorted_keys = solution(sorted_list_1, sorted_list_2)
    assert extra_index == 2
    assert sorted_keys == ['key1', 'key3', 'key2']

def test_single_element_difference():
    sorted_list_1 = [1]
    sorted_list_2 = []
    dict_list = [{'solo': [100]}]
    extra_index, sorted_keys = solution(sorted_list_1, sorted_list_2)
    assert extra_index == 0
    assert sorted_keys == ['solo']
    
def test_with_empty_dict_list():
    sorted_list_1 = [10, 11, 12]
    sorted_list_2 = [10, 11]
    dict_list = []
    extra_index, sorted_keys = solution(sorted_list_1, sorted_list_2)
    assert extra_index == 2
    assert sorted_keys == []
<|Test End|>