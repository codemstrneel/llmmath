QUESTION

Create a function that takes a list of strings and performs two operations:

1. For each string, identify and extract all number sequences and uppercase character runs.
2. For the extracted numbers, calculate their sum and for the uppercase character runs, calculate the length of the longest run.

The function should return a list of tuples where each tuple contains two elements: the sum of numbers and the length of the longest run of uppercase characters for each string in the input list.

SOL & TESTS

<|Solution Begin|>```python
import re

def analyze_strings(strings):
    """
    Analyzes a list of strings to extract number sequences and uppercase character runs.
    For each string, it computes:
    - The sum of all extracted numbers.
    - The length of the longest run of uppercase alphabetic characters.
    
    Returns a list of tuples with the format (sum_of_numbers, longest_uppercase_run).
    """
    results = []
    
    for s in strings:
        # Find all numbers in the string
        number_matches = re.findall(r'\d+', s)
        sum_of_numbers = sum(int(num) for num in number_matches)
        
        # Find all runs of uppercase letters
        uppercase_matches = re.findall(r'[A-Z]+', s)
        longest_uppercase_run = max((len(run) for run in uppercase_matches), default=0)
        
        # Append result as a tuple
        results.append((sum_of_numbers, longest_uppercase_run))
    
    return results
```
<|Solution End|>

<|Test Begin|>
```python
from solution import analyze_strings

def test_analyze_strings_with_numbers_and_uppercase():
    strings = ["abc123XYZ", "1234xx56AAAbcd", "A1B2C3", "WXYZ65"]
    expected = [(123, 3), (1290, 3), (6, 1), (65, 4)]
    assert analyze_strings(strings) == expected

def test_analyze_strings_with_no_numbers_or_uppercase():
    strings = ["abcd", "efgh", "ijkl"]
    expected = [(0, 0), (0, 0), (0, 0)]
    assert analyze_strings(strings) == expected

def test_analyze_strings_with_only_numbers():
    strings = ["123", "4567", "890"]
    expected = [(123, 0), (4567, 0), (890, 0)]
    assert analyze_strings(strings) == expected

def test_analyze_strings_with_only_uppercase():
    strings = ["ABC", "DEFGH", "IJKL"]
    expected = [(0, 3), (0, 5), (0, 4)]
    assert analyze_strings(strings) == expected

def test_analyze_strings_with_mixed_content():
    strings = ["UPPER12case34", "lowerNOcase9", "MIXED123CONTENTS456"]
    expected = [(46, 5), (9, 2), (579, 7)]
    assert analyze_strings(strings) == expected

def test_analyze_strings_with_no_content():
    strings = [""]
    expected = [(0, 0)]
    assert analyze_strings(strings) == expected
```
<|Test End|>