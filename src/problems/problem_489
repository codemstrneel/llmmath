QUESTION

Create a function that extracts a username, domain, and extension from an email address using regex. The function should validate the extracted components to ensure they conform to common email address formatting rules.

SOL & TESTS

<|Solution Begin|>```python
import re

def extract_email_components(email):
    """
    Extracts the username, domain, and extension of an email address if it's valid.
    
    An email is considered valid if:
    - The username contains alphanumeric characters and may include '.', '_', '%', '+', and '-'.
    - The domain contains alphanumeric characters and may include '-' and '.'.
    - The extension contains only letters and is between 2 and 10 characters.
    
    :param email: The email address to parse.
    :return: A tuple of (username, domain, extension) if the email is valid; otherwise, None.
    """
    regex = r'^([a-zA-Z0-9._%+-]+)@([a-zA-Z0-9.-]+)\.([a-zA-Z]{2,10})$'
    match = re.match(regex, email)
    if match:
        return match.groups()
    return None
```
<|Solution End|>

<|Test Begin|>```python
from solution import extract_email_components

def test_valid_email_extraction():
    assert extract_email_components("user.name123@example-domain.com") == ("user.name123", "example-domain", "com")
    assert extract_email_components("user_name+info@mail.server.co.uk") == ("user_name+info", "mail.server", "co")

def test_invalid_username_email():
    assert extract_email_components("user@#$!@domain.com") is None
    assert extract_email_components("user@domain") is None

def test_invalid_domain_email():
    assert extract_email_components("username@domain..com") is None
    assert extract_email_components("username@-domain.com") is None

def test_invalid_extension_email():
    assert extract_email_components("user@domain.c") is None  # Extension too short
    assert extract_email_components("user@domain.12345") is None  # Non-letter characters in extension

def test_edge_cases():
    assert extract_email_components("user@domain.co.uk") == ("user", "domain.co", "uk")  # Valid domain with subdomains
    assert extract_email_components("user@domain") is None  # Missing extension
```
<|Test End|>