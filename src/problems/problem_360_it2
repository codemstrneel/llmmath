QUESTION

Write a function to transform the given list into a dictionary of key-value pairs, where each key is a string of the index position, and the value is the element at the corresponding position.

SOLUTION/TESTS

<|Solution Begin|>
def solution(lst):
    """
    Transforms the given list into a dictionary of key-value pairs.
    Each key is a string of the index position, and the value is the element at that position.
    """
    return {str(index): value for index, value in enumerate(lst)}
<|Solution End|>
<|Test Begin|>
def test_empty_list():
    assert solution([]) == {}

def test_single_element():
    assert solution([42]) == {'0': 42}

def test_multiple_elements():
    assert solution([10, 20, 30]) == {'0': 10, '1': 20, '2': 30}

def test_list_with_varied_elements():
    assert solution(['a', 99, None, True, 3.14]) == {'0': 'a', '1': 99, '2': None, '3': True, '4': 3.14}

def test_list_with_duplicates():
    assert solution([1, 1, 2, 2, 3]) == {'0': 1, '1': 1, '2': 2, '3': 2, '4': 3}

def test_large_numbers():
    assert solution([1000000001]) == {'0': 1000000001}
<|Test End|>