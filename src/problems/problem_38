QUESTION

Write a Python function that takes a dictionary where the keys are month names and the values are strings. The function should return a count of all the lowercase letters in the values of those months that have 31 days.

SOLUTION/TESTS

<|Solution Begin|>
def solution(month_dict):
    """
    Returns the count of lowercase letters in the values of the months with 31 days.
    """
    months_with_31_days = {
        'January', 'March', 'May', 'July', 'August', 'October', 'December'
    }
    count = 0
    for month, string in month_dict.items():
        if month in months_with_31_days:
            count += sum(1 for char in string if char.islower())
    return count
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_lowercase_count_empty_string():
    month_dict = {'January': '', 'March': '', 'May': ''}
    assert solution(month_dict) == 0

def test_no_31_day_months():
    month_dict = {'February': 'example', 'April': 'test'}
    assert solution(month_dict) == 0

def test_all_31_day_months():
    month_dict = {
        'January': 'HelloWorld', 
        'March': 'aBc', 
        'May': 'lowercase', 
        'July': 'Testing',
        'August': 'Python',
        'October': 'joB',
        'December': 'kaYmAN'
    }
    # Expected lowercase counts: HelloWorld: 6, aBc: 1, lowercase: 9, Testing: 6,
    # Python: 5, joB: 2, kaYmAN: 2
    assert solution(month_dict) == 31

def test_mixed_case():
    month_dict = {
        'January': 'tEsT', 
        'March': 'LOWERlower', 
        'May': 'TeSt'
    }
    assert solution(month_dict) == 8

def test_single_31_day_month():
    month_dict = {'March': 'Example', 'April': 'another'}
    # March has 6 lowercase letters: Example -> xample
    assert solution(month_dict) == 6

def test_different_cases():
    month_dict = {
        'January': 'AaBbCc', 
        'February': 'XyZ', 
        'March': 'mnopQR', 
        'August': 'helloWORLD'
    }
    # Lowercase counts: AaBbCc: 3, XyZ: 1, mnopQR: 4, helloWORLD: 5
    # Count only for January, March, August
    assert solution(month_dict) == 12
<|Test End|>