QUESTION

Write a function to find the string in a list of strings that has the highest number of vowels.

SOLUTION/TESTS

<|Solution Begin|>
def solution(strings):
    """
    Returns the string with the highest number of vowels from a list of strings.
    In case of a tie, the first such string is returned.
    """
    vowels = {'a', 'e', 'i', 'o', 'u'}
    
    def count_vowels(string):
        return sum(1 for char in string.lower() if char in vowels)
    
    max_vowels = -1
    result = ''
    
    for s in strings:
        current_vowels = count_vowels(s)
        if current_vowels > max_vowels:
            max_vowels = current_vowels
            result = s
            
    return result
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_single_string():
    assert solution(["apple"]) == "apple"

def test_with_multiple_strings():
    assert solution(["apple", "banana", "grape"]) == "banana"

def test_with_no_vowel_strings():
    assert solution(["bcdf", "ghjkl", "mnp"]) == "bcdf"  # no vowels, return the first

def test_with_empty_string():
    assert solution([""]) == ""  # only an empty string

def test_with_tie_vowels():
    assert solution(["tie", "tea", "eat"]) == "tie"  # all have 2 vowels, pick first

def test_with_upper_and_lower_case():
    assert solution(["APPLE", "Banana", "GRAPE"]) == "Banana"  # case insensitive

def test_with_mixed_length_strings():
    assert solution(["short", "tiny", "lengthiest"]) == "lengthiest"

def test_with_mixed_vowels_and_consonants():
    assert solution(["rhythm", "fly", "try", "echo"]) == "echo"  # "echo" has the most vowels

def test_empty_list():
    assert solution([]) == ""  # no strings

def test_longest_with_same_vowels():
    assert solution(["abcde", "edcba", "eabcd"]) == "abcde"  # return first with 2 vowels
<|Test End|>