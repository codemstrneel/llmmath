QUESTION

Write a Python function to determine the number of contiguous subarrays within a given array that have an equal starting and ending element.

SOL & TESTS

<|Solution Begin|> 
```python
def count_contiguous_subarrays(arr):
    """
    Counts the number of contiguous subarrays that have the same starting and ending element.
    
    Parameters:
        arr (List[int]): The input array of integers.
    
    Returns:
        int: The number of contiguous subarrays with the same first and last element.
    """
    n = len(arr)
    count = 0
    
    # Iterate over each element in the array
    for i in range(n):
        # Explore each potential subarray start at index i
        for j in range(i, n):
            # If the subarray starting and ending elements are the same, count it
            if arr[i] == arr[j]:
                count += 1
                
    return count
```
<|Solution End|>

<|Test Begin|>
```python
from solution import count_contiguous_subarrays

def test_single_element_array():
    assert count_contiguous_subarrays([1]) == 1

def test_multiple_identical_elements():
    assert count_contiguous_subarrays([1, 1, 1]) == 6

def test_distinct_elements():
    assert count_contiguous_subarrays([1, 2, 3]) == 3

def test_mixed_elements():
    assert count_contiguous_subarrays([1, 2, 1]) == 4

def test_with_zero_elements():
    assert count_contiguous_subarrays([]) == 0

def test_larger_array():
    assert count_contiguous_subarrays([2, 3, 4, 2, 3]) == 5

def test_all_unique():
    assert count_contiguous_subarrays([1, 2, 3, 4, 5]) == 5

def test_large_identical_elements():
    assert count_contiguous_subarrays([7, 7, 7, 7, 7]) == 15
```
<|Test End|>