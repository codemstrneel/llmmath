QUESTION

Create a function that takes a list of tuples and a number `n` as input. Each tuple contains an item name and its corresponding price. Your task is to perform the following operations:

1. Convert the list of tuples into a set of unique tuples.
2. Once unique items are obtained, find the `n` cheapest priced items using the heapq module.
3. Return the `n` cheapest priced items as a list of item names sorted alphabetically.

For example, given the input list of tuples `[('apple', 10), ('banana', 5), ('apple', 10), ('orange', 7)]` and `n=2`, the function should return `['banana', 'orange']`.

SOL & TESTS

```python
<|Solution Begin|>
import heapq

def find_n_cheapest_items(items, n):
    # 1. Convert list of tuples into a set of unique tuples
    unique_items = set(items)
    
    # 2. Use heapq to find the n cheapest priced items
    cheapest_items = heapq.nsmallest(n, unique_items, key=lambda x: x[1])
    
    # 3. Extract the item names and sort them alphabetically
    cheapest_item_names = sorted(item[0] for item in cheapest_items)
    
    return cheapest_item_names
```
<|Solution End|>
<|Test Begin|>
```python
from solution import find_n_cheapest_items

def test_find_n_cheapest_items_basic():
    items = [('apple', 10), ('banana', 5), ('apple', 10), ('orange', 7)]
    result = find_n_cheapest_items(items, 2)
    assert result == ['banana', 'orange']

def test_find_n_cheapest_items_unique_prices():
    items = [('apple', 10), ('banana', 8), ('cherry', 7), ('date', 9)]
    result = find_n_cheapest_items(items, 3)
    assert result == ['banana', 'cherry', 'date']

def test_find_n_cheapest_items_less_n():
    items = [('apple', 12), ('banana', 11)]
    result = find_n_cheapest_items(items, 5)
    assert result == ['apple', 'banana']

def test_find_n_cheapest_items_with_duplicates():
    items = [('apple', 15), ('apple', 15), ('banana', 13), ('orange', 18), ('banana', 13)]
    result = find_n_cheapest_items(items, 1)
    assert result == ['banana']

def test_find_n_cheapest_items_order_independent():
    items = [('orange', 12), ('apple', 8), ('banana', 5), ('apple', 8), ('banana', 5), ('orange', 12)]
    result = find_n_cheapest_items(items, 3)
    assert result == ['apple', 'banana', 'orange']
```
<|Test End|>