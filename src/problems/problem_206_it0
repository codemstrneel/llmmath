QUESTION

Write a function that takes a list of integers representing box weights and a target integer representing the maximum weight capacity. The function should return the maximum product of any three distinct weights that can be chosen to place in the box without exceeding the target weight capacity. If it is not possible to find such a combination, the function should return -1.

SOLUTION/TESTS

<|Solution Begin|>
from itertools import combinations

def solution(weights, target):
    """
    Returns the maximum product of any three distinct weights that can be chosen
    such that their sum does not exceed the target weight capacity. Returns -1 if
    no such combination is possible.
    
    Args:
    weights (list): List of integers representing box weights.
    target (int): The maximum weight capacity.
    
    Returns:
    int: The maximum product or -1 if not possible.
    """
    max_product = -1
    
    # Get all combinations of 3 distinct weights
    for triplet in combinations(weights, 3):
        if sum(triplet) <= target:
            product = triplet[0] * triplet[1] * triplet[2]
            max_product = max(max_product, product)
    
    return max_product
<|Solution End|>

<|Test Begin|>
from solution import solution

def test_solution_with_possible_combination():
    assert solution([10, 20, 30, 40, 50], 100) == 60000  # 10, 20, 30
    assert solution([1, 2, 3, 4, 5], 10) == 60           # 2, 3, 5

def test_solution_without_combination():
    assert solution([30, 40, 50, 60], 50) == -1  # No triplet has a sum <= 50

def test_solution_with_single_largest_combination():
    assert solution([5, 5, 5], 15) == 125  # 5, 5, 5
    assert solution([1, 1, 1, 2, 2, 2, 3, 3, 3], 7) == 18  # 2, 2, 3

def test_solution_with_all_negative_values():
    assert solution([-10, -5, -3], -5) == -150  # Only one triplet possible

def test_solution_with_mixed_values_and_large_target():
    assert solution([-10, 5, 20, 1, 2], 100) == 200  # No maximum weight constraint

def test_solution_with_no_combination_satisfying_the_target():
    assert solution([100, 200, 300, 400], 50) == -1  # Each weight exceeds 50
<|Test End|>