QUESTION

Write a Python function to find the position of a given element in a sorted array.

SOL & TESTS

<|Solution Begin|>
```python
def find_position(sorted_array, element):
    """
    Returns the index of element in a sorted array using binary search.
    If the element is not found, returns -1.
    """
    left, right = 0, len(sorted_array) - 1
    while left <= right:
        mid = (left + right) // 2
        if sorted_array[mid] == element:
            return mid
        elif sorted_array[mid] < element:
            left = mid + 1
        else:
            right = mid - 1
    return -1
```
<|Solution End|>

<|Test Begin|>
```python
from solution import find_position

def test_element_found():
    assert find_position([1, 2, 3, 4, 5], 3) == 2

def test_element_not_found():
    assert find_position([1, 2, 3, 4, 5], 6) == -1

def test_element_at_start():
    assert find_position([1, 2, 3, 4, 5], 1) == 0

def test_element_at_end():
    assert find_position([1, 2, 3, 4, 5], 5) == 4

def test_empty_array():
    assert find_position([], 3) == -1

def test_single_element_array_found():
    assert find_position([3], 3) == 0

def test_single_element_array_not_found():
    assert find_position([1], 3) == -1
```
<|Test End|>