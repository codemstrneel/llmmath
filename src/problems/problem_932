QUESTION

Write a function to flatten a deeply nested list of integers into a single list of integers.

SOL & TESTS

<|Solution Begin|> 
```python
def flatten(nested_list):
    """
    Flattens a deeply nested list of integers into a single list of integers.
    """
    flattened = []
    for element in nested_list:
        if isinstance(element, list):
            flattened.extend(flatten(element))
        else:
            flattened.append(element)
    return flattened
```
<|Solution End|>
<|Test Begin|>
```python
from solution import flatten

def test_flatten_empty_list():
    assert flatten([]) == []

def test_flatten_flat_list():
    assert flatten([1, 2, 3]) == [1, 2, 3]

def test_flatten_nested_list():
    assert flatten([1, [2, 3], 4, [5, [6, 7]]]) == [1, 2, 3, 4, 5, 6, 7]

def test_flatten_deeply_nested_list():
    assert flatten([1, [2, [3, [4, [5]]]]]) == [1, 2, 3, 4, 5]

def test_flatten_single_element():
    assert flatten([[[[5]]]]) == [5]

def test_flatten_mixed_empty_nested_lists():
    assert flatten([[], [1], [[], 2], [3, [], [4, [5, [], []]]], [[]]]) == [1, 2, 3, 4, 5]

def test_flatten_list_with_negative_integers():
    assert flatten([-1, [2, [-3, [4, [-5]]]]) == [-1, 2, -3, 4, -5]
```
<|Test End|>