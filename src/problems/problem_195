QUESTION

Write a function to check if the given string starts with a substring using regex, ensure that the substring also ends with a specific character, and verify that the substring contains at least one digit.

SOL & TESTS

<|Solution Begin|> 
```python
import re

def check_string_starts_with_substring(main_string, substring, ending_char):
    """
    Checks if the main_string starts with a substring which also ends with a specific character and contains at least one digit.
    
    Args:
    - main_string (str): The string to check.
    - substring (str): The starting substring to verify in main_string.
    - ending_char (str): The character with which the substring must end.

    Returns:
    - bool: True if the main_string starts with the correct substring conditions, otherwise False.
    """
    # Create the regex pattern which checks for the substring starting with a digit and ending with ending_char
    pattern = rf"^{re.escape(substring)}.*\d.*{re.escape(ending_char)}"
    # Match the pattern at the start of the main_string
    match = re.match(pattern, main_string)
    # Returns True if there's a match, False otherwise
    return bool(match)
```
<|Solution End|>

<|Test Begin|>
```python
from solution import check_string_starts_with_substring

def test_simple_match():
    assert check_string_starts_with_substring("abc123z example", "abc", "z") == True

def test_no_digit_in_substring():
    assert check_string_starts_with_substring("abcxz example", "abc", "z") == False
    
def test_ending_character_mismatch():
    assert check_string_starts_with_substring("abc123y example", "abc", "z") == False
    
def test_substring_with_digit_at_end():
    assert check_string_starts_with_substring("abc123z example", "abc", "3") == True
    
def test_substring_missing_character():
    assert check_string_starts_with_substring("ab123z example", "abc", "z") == False
    
def test_whole_string_as_substring():
    assert check_string_starts_with_substring("abc123z", "abc", "z") == True

def test_starting_but_not_crossing_boundaries():
    assert check_string_starts_with_substring("abc123z example", "abc123z", "z") == True

def test_no_start_match():
    assert check_string_starts_with_substring("example abc123z", "abc", "z") == False
```
<|Test End|>