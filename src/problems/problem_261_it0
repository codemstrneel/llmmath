QUESTION

Write a Python function to check whether the first half of a given array contains only one distinct element.

SOLUTION/TESTS

<|Solution Begin|>
def solution(arr):
    """
    Determines if the first half of the input array contains only one distinct element.
    
    Parameters:
    arr (list): The list of elements to check.
    
    Returns:
    bool: True if the first half of the array contains only one distinct element, False otherwise.
    """
    # Calculate the midpoint of the array
    mid = len(arr) // 2
    
    # Get the first half of the array
    first_half = arr[:mid]
    
    # Check if all elements in the first half are the same
    if len(first_half) > 0:
        return all(element == first_half[0] for element in first_half)
    
    return False
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_empty_array():
    assert solution([]) == False

def test_single_element_array():
    assert solution([1]) == True

def test_two_different_elements_array():
    assert solution([1, 2]) == True  # since only the first element is considered

def test_uniform_first_half():
    assert solution([1, 1, 2, 3]) == True

def test_non_uniform_first_half():
    assert solution([1, 2, 1, 3]) == False

def test_full_uniform_array():
    assert solution([4, 4, 4, 4]) == True 

def test_partial_arrays():
    assert solution([3, 3, 3, 1, 2, 3]) == True
    assert solution([6, 6, 4, 5, 6, 6]) == False

def test_uniform_first_half_even_length():
    assert solution([5, 5, 7, 7, 9, 9, 11, 11]) == True

def test_non_uniform_first_half_even_length():
    assert solution([5, 6, 7, 7, 9, 9, 11, 11]) == False

<|Test End|>