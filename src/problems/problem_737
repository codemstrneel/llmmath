QUESTION

Create a function that computes the product of all odd integers in a given list of integers using a list comprehension.

SOL & TESTS

<|Solution Begin|>```python
def product_of_odds(numbers):
    """
    Computes the product of all odd integers in a list.

    :param numbers: List of integers
    :return: Product of all odd integers in the list
    """
    odd_product = 1
    for num in numbers:
        if num % 2 != 0:
            odd_product *= num
    return odd_product
```
<|Solution End|>
<|Test Begin|>
```python
from solution import product_of_odds

def test_product_of_odds_all_odds():
    assert product_of_odds([1, 3, 5]) == 15

def test_product_of_odds_mixed():
    assert product_of_odds([2, 4, 6, 3, 5, 7]) == 105

def test_product_of_odds_all_even():
    assert product_of_odds([2, 4, 6, 8]) == 1

def test_product_of_odds_with_zero():
    assert product_of_odds([0, 1, 2, 3]) == 3

def test_product_of_odds_empty_list():
    assert product_of_odds([]) == 1

def test_product_of_odds_negative_odds():
    assert product_of_odds([-1, -3, -5]) == -15

def test_product_of_odds_single_element():
    assert product_of_odds([5]) == 5
    assert product_of_odds([2]) == 1

def test_product_of_odds_mixed_signs():
    assert product_of_odds([-1, 2, -3, 4, 5]) == 15
```
<|Test End|>