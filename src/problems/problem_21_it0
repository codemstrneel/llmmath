QUESTION

Write a function to find the most common elements and their counts in a specified text, ignoring any specified punctuation marks.

SOLUTION/TESTS

To solve this problem, we need to implement a function that takes a string and a list of punctuation marks to ignore. The function will find and return the most common words and their counts from the string, with punctuation removed and case-insensitive matching. Here's how we can approach the problem:

1. Remove the specified punctuation from the text.
2. Convert the text to lowercase to ensure case-insensitive counting.
3. Split the text into words.
4. Count occurrences of each word.
5. Identify the most common words.

I'll implement the solution and the unit tests below.

<|Solution Begin|>
```python
import re
from collections import Counter

def solution(text, punctuation_to_ignore):
    # Remove punctuation
    regex_pattern = '[' + re.escape(''.join(punctuation_to_ignore)) + ']'
    clean_text = re.sub(regex_pattern, '', text)
    # Normalize to lowercase
    clean_text = clean_text.lower()
    # Split into words
    words = clean_text.split()
    # Count word occurrences
    word_count = Counter(words)
    # Find the max count
    max_count = max(word_count.values())
    # Get the most common words with their counts
    most_common = [(word, count) for word, count in word_count.items() if count == max_count]
    
    return most_common
<|Solution End|>

<|Test Begin|>
def test_solution_basic():
    text = "Hello, hello world! This is a test. Hello world!"
    punctuation = ",!.?"
    result = solution(text, punctuation)
    assert ('hello', 3) in result
    assert ('world', 2) in result

def test_solution_case_insensitivity():
    text = "Tea, tea, TEA... Coffee! coffee."
    punctuation = ",.!"
    result = solution(text, punctuation)
    assert ('tea', 3) in result
    assert ('coffee', 2) in result

def test_solution_multiple_most_common():
    text = "Yes and no, yes and no."
    punctuation = ",."
    result = solution(text, punctuation)
    assert ('yes', 2) in result
    assert ('and', 2) in result
    assert ('no', 2) in result
    assert len(result) == 3

def test_solution_empty_text():
    text = ""
    punctuation = ",.!"
    result = solution(text, punctuation)
    assert result == []

def test_solution_no_punctuation_to_ignore():
    text = "End. Stop. Done, end!"
    punctuation = ""
    result = solution(text, punctuation)
    # Even punctuation as part of words should count separately
    assert ('end', 1) in result
    assert ('stop', 1) in result
    assert ('done', 1) in result
    assert ('end', 1) in result
    assert len(result) == 4
<|Test End|>