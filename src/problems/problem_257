QUESTION

Create a function that receives a list of strings, where each string is a sentence. Your task is to reverse the order of words in each sentence while maintaining the original character order within each word. Return the modified list of strings with the words reversed in each sentence.

SOL & TESTS

<|Solution Begin|> 
```python
def reverse_words_in_sentences(sentences):
    """
    Receives a list of strings, with each string being a sentence.
    Reverses the order of words in each sentence.
    
    :param sentences: List of sentence strings
    :return: List of sentence strings with word order reversed
    """
    return [' '.join(sentence.split()[::-1]) for sentence in sentences]
```
<|Solution End|>

<|Test Begin|>
```python
from solution import reverse_words_in_sentences

def test_single_sentence():
    assert reverse_words_in_sentences(["Hello world"]) == ["world Hello"]

def test_multiple_sentences():
    assert reverse_words_in_sentences(["Hello world", "Python is great"]) == ["world Hello", "great is Python"]

def test_single_word_sentences():
    assert reverse_words_in_sentences(["Python"]) == ["Python"]

def test_empty_strings():
    assert reverse_words_in_sentences([""]) == [""]

def test_sentences_with_multiple_spaces():
    assert reverse_words_in_sentences(["Hello    world", "  Python   is   great  "]) == ["world Hello", "great is Python"]

def test_mixed_cases():
    assert reverse_words_in_sentences(["HELLO world", "PyThoN IS Great"]) == ["world HELLO", "Great IS PyThoN"]
```
<|Test End|>