QUESTION

Write a function to remove extra spaces in a string and replace each single digit (0-9) with its corresponding word representation.

SOL & TESTS

Sure! Below is the implementation of the function to remove extra spaces in a string and replace each single digit (0-9) with its corresponding word representation.

<|Solution Begin|>
```python
def normalize_and_replace_numbers(s):
    """
    Removes extra spaces in the input string `s` and replaces each single digit
    (0-9) with its word representation.
    
    Parameters:
    s (str): The input string containing spaces and digits.
    
    Returns:
    str: A processed string with single digits replaced by words and extra spaces removed.
    """
    digit_to_word = {
        '0': 'zero', '1': 'one', '2': 'two', '3': 'three', '4': 'four',
        '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine'
    }

    # Remove extra spaces and split the string by spaces
    words = s.split()

    # Replace each digit with its word representation
    result_words = []
    for word in words:
        result_word = ''.join(digit_to_word[ch] if ch in digit_to_word else ch for ch in word)
        result_words.append(result_word)
    
    # Join the words into a single string with a space between each
    return ' '.join(result_words)
```
<|Solution End|>

<|Test Begin|>
```python
def test_remove_extra_spaces_and_replace_numbers():
    assert normalize_and_replace_numbers("This  is a  test ") == "This is a test"
    assert normalize_and_replace_numbers("There are 2 apples") == "There are two apples"
    assert normalize_and_replace_numbers("1 2 3 4") == "one two three four"
    assert normalize_and_replace_numbers("  5   6  7890 ") == "five six seveneightninezero"
    
def test_empty_string():
    assert normalize_and_replace_numbers("") == ""

def test_only_digits():
    assert normalize_and_replace_numbers("0 1 2 3 4 5 6 7 8 9") == "zero one two three four five six seven eight nine"

def test_mixed_content():
    assert normalize_and_replace_numbers("The quick brown fox jumps 100000 times") == "The quick brown fox jumps onezeronononeno times"

def test_no_spaces():
    assert normalize_and_replace_numbers("abcdefgh123") == "abcdefghonetwothree"

if __name__ == "__main__":
    test_remove_extra_spaces_and_replace_numbers()
    test_empty_string()
    test_only_digits()
    test_mixed_content()
    test_no_spaces()
    print("All tests passed.")
```
<|Test End|>