QUESTION

Write a Python function to convert a list of single-digit integers into a single integer.

SOLUTION/TESTS

Below is the solution for the problem of converting a list of single-digit integers into a single integer, followed by the unit tests to verify the correctness of the solution.

<|Solution Begin|>
```python
def solution(digits):
    """
    Convert a list of single-digit integers into a single integer.

    Parameters:
    digits (list of int): A list of single-digit integers.

    Returns:
    int: The integer formed by concatenating the digits.
    """
    return int("".join(str(digit) for digit in digits))
```
<|Solution End|>

<|Test Begin|>
```python
def test_solution_single_digit():
    assert solution([1]) == 1

def test_solution_multiple_digits():
    assert solution([1, 2, 3]) == 123

def test_solution_with_zeros():
    assert solution([0, 5, 0]) == 50

def test_solution_all_zeros():
    assert solution([0, 0, 0]) == 0

def test_solution_empty_list():
    assert solution([]) == 0

def test_solution_max_single_digits():
    assert solution([9, 9, 9, 9]) == 9999

def test_solution_leading_zero():
    assert solution([0, 1, 2]) == 12
```
<|Test End|>

These tests cover various scenarios including single and multiple digits, presence of zeros, an empty list, and the maximum digit value of 9. This ensures robustness and correctness of the solution function across different edge cases.