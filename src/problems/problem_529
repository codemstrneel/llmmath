QUESTION

Write a function to find the maximum of two numbers, and ensure that the function can handle both integers and floating-point numbers without using any built-in comparison functions.

SOL & TESTS

```python
<|Solution Begin|>
def maximum_of_two(a, b):
    """
    Returns the maximum of two numbers a and b without using
    built-in comparison functions. Handles both integers and floats.
    """
    # Use arithmetic to determine the larger number. Subtract and use
    # the result to conditionally return without using max().
    diff = a - b
    if diff >= 0:
        return a
    else:
        return b
<|Solution End|>
```

```python
<|Test Begin|>
from solution import maximum_of_two

def test_maximum_of_two_positive_integers():
    assert maximum_of_two(2, 3) == 3
    assert maximum_of_two(5, 4) == 5

def test_maximum_of_two_negative_integers():
    assert maximum_of_two(-2, -3) == -2
    assert maximum_of_two(-5, -1) == -1

def test_maximum_of_two_positive_floats():
    assert maximum_of_two(2.5, 3.1) == 3.1
    assert maximum_of_two(5.0, 4.9) == 5.0

def test_maximum_of_two_negative_floats():
    assert maximum_of_two(-2.5, -3.1) == -2.5
    assert maximum_of_two(-5.0, -4.9) == -4.9

def test_maximum_of_two_mixed_sign_numbers():
    assert maximum_of_two(-1, 2) == 2
    assert maximum_of_two(-3.5, 3.5) == 3.5

def test_maximum_of_two_equal_numbers():
    assert maximum_of_two(5, 5) == 5
    assert maximum_of_two(-3, -3) == -3
    assert maximum_of_two(0.0, 0.0) == 0.0

def test_maximum_of_two_zero_and_positive():
    assert maximum_of_two(0, 5) == 5
    assert maximum_of_two(5, 0) == 5

def test_maximum_of_two_zero_and_negative():
    assert maximum_of_two(0, -5) == 0
    assert maximum_of_two(-5, 0) == 0
<|Test End|>
```