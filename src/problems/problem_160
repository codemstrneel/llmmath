QUESTION

Write a function to determine the maximum number of segments, each of a given length, that can be formed from a total length n.

SOL & TESTS

<|Solution Begin|> ```python
def max_segments(n, segment_length):
    """
    Determines the maximum number of segments of a given length that can be 
    formed from a total length n.
    
    Parameters:
    n (int): Total length available.
    segment_length (int): Length of each segment.
    
    Returns:
    int: Maximum number of segments that can be formed.
    """
    if segment_length <= 0:
        raise ValueError("Segment length must be greater than zero.")
        
    return n // segment_length
```
<|Solution End|>
<|Test Begin|>
```python
from solution import max_segments

def test_max_segments_basic_case():
    assert max_segments(10, 2) == 5

def test_max_segments_exact_fit():
    assert max_segments(10, 5) == 2

def test_max_segments_incomplete_last_segment():
    assert max_segments(10, 3) == 3

def test_max_segments_length_equal_n():
    assert max_segments(10, 10) == 1

def test_max_segments_larger_segment_than_n():
    assert max_segments(5, 10) == 0

def test_max_segments_zero_segment_length():
    try:
        max_segments(10, 0)
    except ValueError as e:
        assert str(e) == "Segment length must be greater than zero."
    
def test_max_segments_negative_segment_length():
    try:
        max_segments(10, -1)
    except ValueError as e:
        assert str(e) == "Segment length must be greater than zero."

def test_max_segments_zero_total_length():
    assert max_segments(0, 1) == 0

def test_max_segments_zero_total_and_segment_length():
    try:
        max_segments(0, 0)
    except ValueError as e:
        assert str(e) == "Segment length must be greater than zero."
```
<|Test End|>