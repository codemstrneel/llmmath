QUESTION

Write a function to rearrange the given array such that all negative numbers appear before all non-negative numbers, without using any sorting algorithm. The given array can contain any integers.

SOL & TESTS

<|Solution Begin|> 
```python
def rearrange_array(arr):
    """
    Rearrange the array such that all negative numbers appear 
    before all non-negative numbers.
    
    :param arr: List of integers
    :return: The rearranged list with negative numbers first
    """
    negative = []
    non_negative = []
    
    for num in arr:
        if num < 0:
            negative.append(num)
        else:
            non_negative.append(num)
            
    return negative + non_negative
```
<|Solution End|>

<|Test Begin|>
```python
from solution import rearrange_array

def test_all_negative_numbers():
    assert rearrange_array([-3, -2, -1, -5]) == [-3, -2, -1, -5]

def test_all_non_negative_numbers():
    assert rearrange_array([1, 2, 3, 0, 5]) == [1, 2, 3, 0, 5]

def test_mixed_numbers():
    result = rearrange_array([-1, 2, -3, 4, 0, -5])
    assert result[:3] == [-1, -3, -5] and result[3:] == [2, 4, 0]

def test_single_negative_number():
    assert rearrange_array([-1]) == [-1]

def test_single_non_negative_number():
    assert rearrange_array([1]) == [1]

def test_empty_array():
    assert rearrange_array([]) == []

def test_no_negative_numbers():
    assert rearrange_array([0, 1, 2, 3, 4]) == [0, 1, 2, 3, 4]
    
def test_no_non_negative_numbers():
    assert rearrange_array([-4, -2, -3]) == [-4, -2, -3]

def test_repeat_numbers():
    assert rearrange_array([0, -3, -3, 3, 3]) == [-3, -3, 0, 3, 3]
```
<|Test End|>