QUESTION

Write a function to compute the greatest common divisor (GCD) of two given numbers.

SOL & TESTS

<|Solution Begin|>```python
def gcd(a, b):
    """
    Returns the greatest common divisor of a and b using the Euclidean algorithm.
    """
    while b:
        a, b = b, a % b
    return abs(a)
```
<|Solution End|>
<|Test Begin|>
```python
from solution import gcd

def test_gcd_positive_numbers():
    assert gcd(54, 24) == 6
    assert gcd(48, 18) == 6

def test_gcd_prime_numbers():
    # Prime numbers have gcd of 1 with each other
    assert gcd(13, 17) == 1

def test_gcd_zero():
    # gcd of any number with 0 is the number itself
    assert gcd(0, 5) == 5
    assert gcd(5, 0) == 5

def test_gcd_of_same_numbers():
    # gcd of a number with itself is the number itself
    assert gcd(7, 7) == 7

def test_gcd_negative_numbers():
    # gcd should be positive even if inputs are negative
    assert gcd(-54, -24) == 6
    assert gcd(-8, 12) == 4

def test_gcd_one_negative_one_positive():
    # Should correctly handle one negative and one positive
    assert gcd(-48, 18) == 6
    assert gcd(48, -18) == 6
```
<|Test End|>