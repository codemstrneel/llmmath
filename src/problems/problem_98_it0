QUESTION

Write a function to find all the equilibrium indices of the given array that meet the additional condition: the value at the equilibrium index must be greater than the average of all elements in the array.

SOLUTION/TESTS

<|Solution Begin|>
def solution(arr):
    """
    Finds all equilibrium indices in the array where 
    the value at the index is greater than the average of all elements.
    An equilibrium index is an index where the sum of elements on the left is equal to the sum of elements on the right.
    """
    if not arr:
        return []

    total_sum = sum(arr)
    left_sum = 0
    avg = total_sum / len(arr)
    equilibrium_indices = []

    for i in range(len(arr)):
        right_sum = total_sum - left_sum - arr[i]
        
        if left_sum == right_sum and arr[i] > avg:
            equilibrium_indices.append(i)
        
        left_sum += arr[i]
        
    return equilibrium_indices
<|Solution End|>
<|Test Begin|>
def test_solution_empty():
    assert solution([]) == []

def test_solution_no_equilibrium():
    assert solution([1, 2, 3]) == []

def test_solution_single_element():
    assert solution([5]) == [0]

def test_solution_all_elements_equal():
    assert solution([10, 10, 10, 10, 10]) == []

def test_solution_with_valid_equilibria():
    assert solution([1, 3, 5, 2, 2, 5, 1, 1]) == [2, 5]
    
def test_solution_edge_cases():
    assert solution([3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]) == [4]
    assert solution([2, 4, 6, 8, 10, 12, 14]) == []
    assert solution([-7, 1, 5, 2, -4, 3, 0]) == []
<|Test End|>