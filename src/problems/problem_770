QUESTION

Write a Python function to find the smallest positive divisor of a number greater than 1.

SOL & TESTS

<|Solution Begin|>
```python
def smallest_positive_divisor(n):
    """
    Returns the smallest positive divisor of a number greater than 1.

    Parameters:
    n (int): The number for which to find the smallest positive divisor.

    Returns:
    int: The smallest positive divisor of n greater than 1.
    """
    if n <= 1:
        raise ValueError("Input must be a number greater than 1")
    
    for i in range(2, n + 1):
        if n % i == 0:
            return i
```
<|Solution End|>

<|Test Begin|>
```python
from solution import smallest_positive_divisor

def test_smallest_divisor_of_prime():
    assert smallest_positive_divisor(13) == 13

def test_smallest_divisor_of_composite():
    assert smallest_positive_divisor(18) == 2
    assert smallest_positive_divisor(49) == 7

def test_smallest_divisor_of_even_number():
    assert smallest_positive_divisor(8) == 2

def test_smallest_divisor_of_odd_number():
    assert smallest_positive_divisor(81) == 3

def test_invalid_input():
    try:
        smallest_positive_divisor(1)
        assert False, "Expected ValueError"
    except ValueError:
        assert True

    try:
        smallest_positive_divisor(0)
        assert False, "Expected ValueError"
    except ValueError:
        assert True

    try:
        smallest_positive_divisor(-5)
        assert False, "Expected ValueError"
    except ValueError:
        assert True
```
<|Test End|>