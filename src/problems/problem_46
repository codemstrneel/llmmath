QUESTION

Write a python function to find the minimum difference between any two consecutive elements in a sorted array.

SOL & TESTS

Sure! Below is the solution for finding the minimum difference between consecutive elements in a sorted array, followed by unit tests.

<|Solution Begin|>
```python
def min_consecutive_diff(sorted_array):
    """
    Returns the minimum difference between any two consecutive elements in a sorted array.
    """
    if len(sorted_array) < 2:
        raise ValueError("Array must have at least two elements.")
    
    min_diff = float('inf')
    for i in range(1, len(sorted_array)):
        diff = sorted_array[i] - sorted_array[i - 1]
        if diff < min_diff:
            min_diff = diff
    
    return min_diff
```
<|Solution End|>

<|Test Begin|>
```python
def test_min_consecutive_diff_standard_case():
    assert min_consecutive_diff([1, 3, 6, 10]) == 2

def test_min_consecutive_diff_identical_elements():
    assert min_consecutive_diff([5, 5, 5, 5]) == 0

def test_min_consecutive_diff_minimum_elements():
    with pytest.raises(ValueError):
        min_consecutive_diff([10])

def test_min_consecutive_diff_with_negative_numbers():
    assert min_consecutive_diff([-10, -5, 0, 3, 8]) == 3

def test_min_consecutive_diff_with_large_numbers():
    assert min_consecutive_diff([-1000000, 0, 1000000, 1000001]) == 1

def test_min_consecutive_diff_zero_difference():
    assert min_consecutive_diff([2, 4, 6, 6, 8]) == 0
```
<|Test End|>