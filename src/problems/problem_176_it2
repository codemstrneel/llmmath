QUESTION

Create a function that uses a lambda function to filter and return numbers greater than a specified threshold from a list of numbers.

SOLUTION/TESTS

<|Solution Begin|>
def solution(numbers, threshold):
    """
    Filters and returns numbers greater than the specified threshold from a list of numbers.
    
    :param numbers: List of integers or floats.
    :param threshold: An integer or float representing the threshold.
    :return: A list of numbers from the input list that are greater than the threshold.
    """
    return list(filter(lambda x: x > threshold, numbers))
<|Solution End|>
<|Test Begin|>
from solution import solution

def test_solution_with_positive_numbers():
    assert solution([1, 4, 6, 8, 10], 5) == [6, 8, 10]

def test_solution_with_no_numbers_above_threshold():
    assert solution([1, 2, 3, 4, 5], 10) == []

def test_solution_with_negative_numbers():
    assert solution([-10, -5, 0, 5, 10], 0) == [5, 10]

def test_solution_mixed_positive_and_negative_numbers():
    assert solution([-1, -2, 3, 7, -5], -1) == [3, 7]

def test_solution_with_floats():
    assert solution([1.5, 2.5, 3.5, 4.5], 3.0) == [3.5, 4.5]

def test_solution_with_equal_threshold():
    assert solution([1, 2, 3, 4, 5], 5) == []

def test_solution_with_empty_list():
    assert solution([], 5) == []

def test_solution_with_all_numbers_equal_to_threshold():
    assert solution([5, 5, 5, 5], 5) == []
<|Test End|>