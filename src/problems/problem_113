QUESTION

Write a Python function to merge the first elements of all the inner lists into one list and the last elements of all the inner lists into another list, given a list of lists.

SOL & TESTS

<|Solution Begin|>```python
def merge_first_last_elements(lists):
    """
    Merges the first elements and last elements from a list of lists.
    
    Parameters:
        lists (list of list): A list where each element is a list.
        
    Returns:
        tuple: Two lists, the first with first elements and the second with last elements.
    """
    first_elements = [sublist[0] for sublist in lists if sublist]
    last_elements = [sublist[-1] for sublist in lists if sublist]
    return first_elements, last_elements
```
<|Solution End|>
<|Test Begin|>
```python
from solution import merge_first_last_elements

def test_merge_first_last_elements_standard():
    lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    assert merge_first_last_elements(lists) == ([1, 4, 7], [3, 6, 9])

def test_merge_single_element_lists():
    lists = [[1], [2], [3]]
    assert merge_first_last_elements(lists) == ([1, 2, 3], [1, 2, 3])

def test_merge_empty_input():
    lists = []
    assert merge_first_last_elements(lists) == ([], [])

def test_merge_mixed_empty_and_nonempty_lists():
    lists = [[], [1, 2, 3], [], [4, 5]]
    assert merge_first_last_elements(lists) == ([1, 4], [3, 5])

def test_merge_with_empty_sublists():
    lists = [[], []]
    assert merge_first_last_elements(lists) == ([], [])

def test_merge_varied_length_sublists():
    lists = [[1, 2, 3], [4], [5, 6]]
    assert merge_first_last_elements(lists) == ([1, 4, 5], [3, 4, 6])
```
<|Test End|>