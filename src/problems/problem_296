QUESTION

Write a function to count the frequency of consecutive duplicate characters in a given string, and return the counts as a list of tuples, each containing the character and its frequency, sorted in descending order by frequency.

SOL & TESTS

<|Solution Begin|> 
```python
def count_consecutive_duplicates(s):
    """
    Counts the frequency of consecutive duplicate characters in a string.

    :param s: The input string.
    :return: A list of tuples containing the character and its frequency, sorted in descending order by frequency.
    """
    if not s:
        return []

    # To hold the character and its consecutive frequency
    count_list = []
    current_char = s[0]
    current_count = 1
    
    # Iterate over the string starting from the second character
    for char in s[1:]:
        if char == current_char:
            current_count += 1
        else:
            count_list.append((current_char, current_count))
            current_char = char
            current_count = 1
    count_list.append((current_char, current_count))  # Append the last counted character
    
    # Sort by frequency in descending order
    count_list.sort(key=lambda x: x[1], reverse=True)
    
    return count_list
```
<|Solution End|>
<|Test Begin|>
```python
from solution import count_consecutive_duplicates

def test_empty_string():
    assert count_consecutive_duplicates("") == []

def test_no_consecutive_duplicates():
    assert count_consecutive_duplicates("abc") == [('a', 1), ('b', 1), ('c', 1)]

def test_single_character_string():
    assert count_consecutive_duplicates("aaaa") == [('a', 4)]

def test_mixed_characters():
    assert count_consecutive_duplicates("aaabbc") == [('a', 3), ('b', 2), ('c', 1)]

def test_long_string():
    s = "aabbbccccddddd"
    expected = [('d', 5), ('c', 4), ('b', 3), ('a', 2)]
    assert count_consecutive_duplicates(s) == expected

def test_string_with_spaces():
    s = "aa bb ccc"
    expected = [('c', 3), ('a', 2), ('b', 2)]
    assert count_consecutive_duplicates(s) == expected

def test_varied_character_types():
    s = "&&!! ##"
    expected = [('&', 2), ('!', 2), ('#', 2)]
    assert count_consecutive_duplicates(s) == expected
```
<|Test End|>