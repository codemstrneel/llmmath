QUESTION

Design a function that takes a list of lists and returns a list of sets, where each list from the input is converted into a set.

SOL & TESTS

<|Solution Begin|> 
```python
def convert_lists_to_sets(list_of_lists):
    """
    Converts a list of lists into a list of sets.

    Args:
    list_of_lists (list): A list where each element is a list.

    Returns:
    list: A list of sets, where each set is derived from each list in the input.
    """
    return [set(inner_list) for inner_list in list_of_lists]
```
<|Solution End|>
<|Test Begin|>
```python
from solution import convert_lists_to_sets

def test_empty_list():
    assert convert_lists_to_sets([]) == []

def test_single_empty_list():
    assert convert_lists_to_sets([[]]) == [set()]

def test_single_list():
    assert convert_lists_to_sets([[1, 2, 3]]) == [{1, 2, 3}]

def test_multiple_lists():
    input_data = [[1, 2, 3], [4, 5, 6], [7, 8]]
    expected_output = [{1, 2, 3}, {4, 5, 6}, {7, 8}]
    assert convert_lists_to_sets(input_data) == expected_output

def test_lists_with_duplicates():
    input_data = [[1, 1, 2, 2], [3, 3, 3], [4, 5, 4]]
    expected_output = [{1, 2}, {3}, {4, 5}]
    assert convert_lists_to_sets(input_data) == expected_output

def test_lists_with_mixed_data():
    input_data = [['a', 'b', 'a'], [1, 'b', 1], [None, 'c']]
    expected_output = [{'a', 'b'}, {'b', 1}, {None, 'c'}]
    assert convert_lists_to_sets(input_data) == expected_output
```
<|Test End|>