QUESTION

Write a function to find the area of a sector, and additionally, modify your function to handle inputs for both degrees and radians.

SOL & TESTS

To calculate the area of a sector of a circle, we use the formula:

- If the angle is in degrees:  
  \[
  \text{Area} = \frac{\theta}{360} \times \pi \times r^2
  \]
  
- If the angle is in radians:  
  \[
  \text{Area} = \frac{\theta}{2\pi} \times \pi \times r^2 = \frac{\theta}{2} \times r^2
  \]

Where:
- \(\theta\) is the angle of the sector.
- \(r\) is the radius of the circle.

Let's write a function to calculate this and include handling for input in both degrees and radians.

<|Solution Begin|>
```python
import math

def sector_area(radius, angle, angle_in_degrees=True):
    """
    Calculate the area of a sector given the radius and angle.

    Parameters:
    radius (float): The radius of the circle.
    angle (float): The angle of the sector.
    angle_in_degrees (bool): Flag indicating if the angle is in degrees (True) or radians (False).

    Returns:
    float: The area of the sector.
    """
    if angle_in_degrees:
        # Convert degrees to radians
        angle = math.radians(angle)
    # Calculate the area of the sector
    return 0.5 * radius ** 2 * angle
```
<|Solution End|>

<|Test Begin|>
```python
from solution import sector_area

def test_sector_area_degrees():
    assert math.isclose(sector_area(1, 90), 0.5 * 1 * 1 * math.pi / 2, rel_tol=1e-9)
    assert math.isclose(sector_area(2, 180), 2 * 2 * math.pi / 2, rel_tol=1e-9)
    assert math.isclose(sector_area(3, 360), 3 * 3 * math.pi / 1, rel_tol=1e-9)
    
def test_sector_area_radians():
    assert math.isclose(sector_area(1, math.pi/2, angle_in_degrees=False), 0.5 * 1 * 1 * math.pi / 2, rel_tol=1e-9)
    assert math.isclose(sector_area(2, math.pi, angle_in_degrees=False), 2 * 2 * math.pi / 2, rel_tol=1e-9)
    assert math.isclose(sector_area(3, 2*math.pi, angle_in_degrees=False), 3 * 3 * math.pi / 1, rel_tol=1e-9)

def test_sector_area_zero_angle():
    assert sector_area(1, 0) == 0
    assert sector_area(1, 0, angle_in_degrees=False) == 0

def test_sector_area_zero_radius():
    assert sector_area(0, 90) == 0
    assert sector_area(0, math.pi, angle_in_degrees=False) == 0
```
<|Test End|>