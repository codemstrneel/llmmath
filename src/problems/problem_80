QUESTION

Create a Python function that takes a string and a non-negative integer n as inputs. The function should first separate words in the string that start with capital letters using spaces. Then, depending on whether the count of these words is odd or even, perform one of the following: if the count is even, calculate the nth Fibonacci number and return it; if the count is odd, retrieve the nth element from a predefined list of integers.

SOLUTION/TESTS

<|Solution Begin|>
def solution(s, n):
    """
    Separates words in the input string that start with capital letters using spaces. 
    Counts these words and based on whether the count is odd or even, either returns 
    the nth Fibonacci number or retrieves the nth element from a predefined list of integers.
    """
    import re

    # Define the list of integers
    predefined_list = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]

    # Function to calculate the nth Fibonacci number
    def fibonacci(n):
        a, b = 0, 1
        for _ in range(n):
            a, b = b, a + b
        return a

    # Use regex to find words starting with a capital letter
    capitalized_words = re.findall(r'\b[A-Z][a-z]*\b', s)
    
    # Count the capitalized words
    count = len(capitalized_words)
    
    # For even count, calculate and return the nth Fibonacci number
    if count % 2 == 0:
        return fibonacci(n)
    
    # For odd count, return the nth element from the predefined list
    else:
        return predefined_list[n]

<|Solution End|>
<|Test Begin|>
from solution import solution

def test_even_count_fibonacci():
    assert solution("Hello World This Is", 0) == 0  # Even count, 0th Fibonacci: 0
    assert solution("Hello World This Is", 1) == 1  # Even count, 1st Fibonacci: 1
    assert solution("Hello World This Is", 5) == 5  # Even count, 5th Fibonacci: 5

def test_odd_count_predefined_list():
    assert solution("Hello World", 0) == 3  # Odd count, 0th element in list: 3
    assert solution("Hello World", 5) == 9  # Odd count, 5th element in list: 9
    assert solution("Hello Planet Earth", 8) == 5  # Odd count, 8th element in list: 5

def test_no_capitalized_words_even():
    # No capitalized words, which is counted as even (0 words)
    assert solution("no capital letters here", 2) == 1  # 2nd Fibonacci: 1

def test_no_capitalized_words_odd():
    # Edge case: Even with 0, treated as even though no capitals exist
    assert solution("az", 3) == 1  # 3rd Fibonacci: 1

def test_boundary_condition():
    # Testing the 0th and last elements of predefined list
    assert solution("A B C D", 10) == 3  # Even (4 words), 10th Fibonacci: 55
    assert solution("X", 10) == 3  # Odd (1 word), 10th element in predefined list: 5

<|Test End|>