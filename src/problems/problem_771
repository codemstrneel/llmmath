QUESTION

Create a Python function to identify the largest prime factor of a given integer.

SOL & TESTS

<|Solution Begin|> 
```python
def largest_prime_factor(n):
    """
    Returns the largest prime factor of a given integer n.
    """
    def is_prime(num):
        if num <= 1:
            return False
        if num <= 3:
            return True
        if num % 2 == 0 or num % 3 == 0:
            return False
        i = 5
        while i * i <= num:
            if num % i == 0 or num % (i + 2) == 0:
                return False
            i += 6
        return True

    if n <= 1:
        return None
    
    if is_prime(n):
        return n
    
    largest_factor = None
    factor = 2
    while factor * factor <= n:
        if n % factor == 0:
            n //= factor
            largest_factor = factor
        else:
            factor += 1
    
    if n > 1:
        largest_factor = n
    
    return largest_factor
```
<|Solution End|>
<|Test Begin|>
```python
from solution import largest_prime_factor

def test_largest_prime_factor_of_small_number():
    assert largest_prime_factor(10) == 5
    assert largest_prime_factor(15) == 5

def test_largest_prime_factor_of_prime_number():
    assert largest_prime_factor(13) == 13
    assert largest_prime_factor(29) == 29

def test_largest_prime_factor_of_composite_number():
    assert largest_prime_factor(28) == 7
    assert largest_prime_factor(100) == 5

def test_largest_prime_factor_of_number_with_prime_factors():
    assert largest_prime_factor(13195) == 29
    assert largest_prime_factor(644) == 23

def test_largest_prime_factor_of_zero_and_one():
    assert largest_prime_factor(0) is None
    assert largest_prime_factor(1) is None
```
<|Test End|>