QUESTION

Write a function to re-order the elements of a given list of dictionaries based on a specified key order provided in another list. Each dictionary contains unique keys, and the key order list specifies the desired order of dictionary elements.

SOL & TESTS

```python
def reorder_dicts(list_of_dicts, key_order):
    """
    Reorders elements of each dictionary in the list according to the specified key order.

    :param list_of_dicts: List of dictionaries where each dictionary has unique keys.
    :param key_order: List specifying the desired key order for the dictionaries.
    :return: New list of dictionaries with keys rearranged according to key_order.
    """
    reordered_dicts = []
    
    for d in list_of_dicts:
        reordered_dict = {key: d[key] for key in key_order if key in d}
        # Add any remaining keys that weren't specified in key_order
        for key in d:
            if key not in key_order:
                reordered_dict[key] = d[key]
        reordered_dicts.append(reordered_dict)
    
    return reordered_dicts
```
<|Solution End|>
<|Test Begin|>
```python
def test_reorder_dicts():
    list_of_dicts = [
        {'a': 1, 'b': 2, 'c': 3},
        {'a': 4, 'c': 6, 'b': 5},
        {'b': 7, 'a': 9, 'c': 8}
    ]
    key_order = ['b', 'a', 'c']
    
    expected_output = [
        {'b': 2, 'a': 1, 'c': 3},
        {'b': 5, 'a': 4, 'c': 6},
        {'b': 7, 'a': 9, 'c': 8}
    ]
    assert reorder_dicts(list_of_dicts, key_order) == expected_output

def test_reorder_dicts_missing_keys():
    list_of_dicts = [
        {'a': 1, 'b': 2},
        {'a': 4, 'c': 6},
        {'b': 7, 'c': 8}
    ]
    key_order = ['c', 'a', 'b']
    
    expected_output = [
        {'a': 1, 'b': 2},
        {'c': 6, 'a': 4},
        {'c': 8, 'b': 7}
    ]
    assert reorder_dicts(list_of_dicts, key_order) == expected_output

def test_reorder_dicts_no_key_order():
    list_of_dicts = [
        {'x': 11, 'y': 12},
        {'x': 14, 'z': 16},
    ]
    key_order = []
    
    expected_output = [
        {'x': 11, 'y': 12},
        {'x': 14, 'z': 16}
    ]
    assert reorder_dicts(list_of_dicts, key_order) == expected_output

def test_reorder_dicts_additional_keys():
    list_of_dicts = [
        {'d': 1, 'e': 2, 'f': 3},
        {'e': 4, 'd': 5},
        {'f': 6, 'd': 7}
    ]
    key_order = ['f', 'd']
    
    expected_output = [
        {'f': 3, 'd': 1, 'e': 2},
        {'d': 5, 'e': 4},
        {'f': 6, 'd': 7}
    ]
    assert reorder_dicts(list_of_dicts, key_order) == expected_output

def test_reorder_dicts_empty_list():
    list_of_dicts = []
    key_order = ['a', 'b']
    
    expected_output = []
    assert reorder_dicts(list_of_dicts, key_order) == expected_output
```
<|Test End|>