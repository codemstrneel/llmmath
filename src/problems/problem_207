QUESTION

Combine elements of tuple manipulation and numeric comparison by creating a novel problem. Your new question could be:

**New Question:**

Write a Python function that takes two inputs: a list of tuples, where each tuple contains three integers, and an integer `n`. The task is to do the following:

1. Group the tuples based on their first element. Tuples with the same first element should be combined into a list.
2. For each group, count how many tuples have exactly two of their three integers equal.
3. Within each group, find the maximum value in the `n`-th position across all tuples in that group.
4. Return a dictionary where the keys are the first elements of the original tuples, and the values are tuples containing:
   - The count of tuples with exactly two equal numbers in the group.
   - The maximum value at the `n`-th position from the tuples in that group.

For example, given the input list of tuples `[(1, 5, 5), (2, 3, 4), (1, 2, 1), (2, 2, 2)]` and `n = 2`, the output should be: `{1: (1, 5), 2: (1, 4)}`.

SOL & TESTS

<|Solution Begin|>
```python
def process_tuples(tuples, n):
    from collections import defaultdict

    groups = defaultdict(list)
    for t in tuples:
        groups[t[0]].append(t)

    result = {}
    for key, group in groups.items():
        count_two_equal = sum(1 for x, y, z in group if len({x, y, z}) == 2)
        max_value_at_n = max(t[n] for t in group)
        result[key] = (count_two_equal, max_value_at_n)

    return result
```
<|Solution End|>

<|Test Begin|>
```python
from solution import process_tuples

def test_process_tuples_basic():
    tuples = [(1, 5, 5), (2, 3, 4), (1, 2, 1), (2, 2, 2)]
    assert process_tuples(tuples, 2) == {1: (1, 5), 2: (1, 4)}

def test_process_tuples_no_equal():
    tuples = [(1, 9, 5), (2, 3, 4), (1, 2, 8), (2, 2, 0)]
    assert process_tuples(tuples, 1) == {1: (0, 9), 2: (0, 3)}

def test_process_tuples_all_equal():
    tuples = [(1, 2, 2), (2, 3, 3), (1, 2, 2), (2, 3, 3)]
    assert process_tuples(tuples, 2) == {1: (2, 2), 2: (2, 3)}

def test_process_tuples_same_first_element():
    tuples = [(1, 1, 1), (1, 2, 2), (1, 3, 3), (1, 4, 4)]
    assert process_tuples(tuples, 1) == {1: (3, 4)}

def test_process_tuples_large_n():
    tuples = [(1, 4, 5), (2, 1, 0), (1, 0, 3), (2, 5, 2), (3, 3, 3)]
    assert process_tuples(tuples, 2) == {1: (0, 5), 2: (0, 2), 3: (1, 3)}

def test_process_tuples_count_zero():
    tuples = [(3, 2, 1), (3, 4, 5), (4, 4, 2), (4, 4, 2)]
    assert process_tuples(tuples, 0) == {3: (0, 4), 4: (2, 4)}
```
<|Test End|>