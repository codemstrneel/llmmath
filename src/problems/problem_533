QUESTION

Write a Python function to find the sum of the cubes of n natural numbers.

SOL & TESTS

<|Solution Begin|> 
```python
def sum_of_cubes(n):
    """
    Returns the sum of the cubes of the first n natural numbers.
    :param n: integer
    :return: integer
    """
    return sum(i**3 for i in range(1, n + 1))
```
<|Solution End|>
<|Test Begin|>
```python
from solution import sum_of_cubes

def test_sum_of_cubes_n_is_zero():
    assert sum_of_cubes(0) == 0

def test_sum_of_cubes_n_is_one():
    assert sum_of_cubes(1) == 1

def test_sum_of_cubes_small_n():
    assert sum_of_cubes(2) == 9  # 1^3 + 2^3 = 1 + 8 = 9
    assert sum_of_cubes(3) == 36  # 1^3 + 2^3 + 3^3 = 1 + 8 + 27 = 36

def test_sum_of_cubes_larger_n():
    assert sum_of_cubes(4) == 100  # 1^3 + 2^3 + 3^3 + 4^3 = 1 + 8 + 27 + 64 = 100
    assert sum_of_cubes(5) == 225  # 1^3 + 2^3 + 3^3 + 4^3 + 5^3 = 1 + 8 + 27 + 64 + 125 = 225

def test_sum_of_cubes_n_is_large():
    expected_sum = sum(i**3 for i in range(1, 101))
    assert sum_of_cubes(100) == expected_sum
```
<|Test End|>