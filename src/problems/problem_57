QUESTION

Create a Python function that accepts a list of strings, where each string represents a month. The function should return a list containing only those months with 31 days and count how many vowels (a, e, i, o, u) appear in those month names.

SOLUTION/TESTS

<|Solution Begin|>
def solution(months):
    """
    Returns a list of month names with 31 days and the total count of vowels
    in those month names.
    """
    # Months with 31 days
    months_31_days = {"January", "March", "May", "July", "August", "October", "December"}

    # Filter the entered months to find those with 31 days
    filter_months = [month for month in months if month in months_31_days]

    # Count vowels in each selected month
    vowels = set("aeiouAEIOU")
    vowel_count = sum(1 for month in filter_months for ch in month if ch in vowels)

    return filter_months, vowel_count

<|Solution End|>
<|Test Begin|>
def test_solution():
    # Test with typical input
    months = ["January", "February", "March", "April", "May", "June", "July", "August", 
              "September", "October", "November", "December"]
    assert solution(months) == (["January", "March", "May", "July", "August", "October", "December"], 20)

    # Test with repeated months
    months = ["January", "March", "March", "May"]
    assert solution(months) == (["January", "March", "March", "May"], 10)

    # Test with no 31-day months
    months = ["February", "April", "June", "September", "November"]
    assert solution(months) == ([], 0)

    # Test with empty list
    months = []
    assert solution(months) == ([], 0)

    # Test with mixed case
    months = ["january", "FEBRUARY", "MaRcH", "april"]
    # Here the function will not find 'january' and 'MaRcH' as it checks for strict membership
    assert solution(months) == ([], 0)

<|Test End|>