QUESTION

Create a function that takes a string as input and returns a list of words that appear exactly twice in the string. You must utilize the collections module to achieve this.

SOL & TESTS

<|Solution Begin|> 
```python
from collections import Counter
import re

def get_words_appearing_twice(input_string):
    """
    Returns a list of words that appear exactly twice in the input string.
    """
    # Using regex to find words, ignoring case
    words = re.findall(r'\b\w+\b', input_string.lower())
    
    # Counting occurrences of each word
    word_count = Counter(words)
    
    # Filtering words that appear exactly twice
    result = [word for word, count in word_count.items() if count == 2]
    
    return result
```
<|Solution End|>

<|Test Begin|>
```python
from solution import get_words_appearing_twice

def test_no_words_appear_twice():
    assert get_words_appearing_twice("This is a test with no repeats.") == []

def test_some_words_appear_twice():
    assert set(get_words_appearing_twice("This is a test test with some some words repeated repeated twice.")) == {"test", "some", "repeated"}

def test_all_words_appear_once():
    assert get_words_appearing_twice("Each word in this sentence is unique.") == []

def test_mixed_case_words_appear_twice():
    assert set(get_words_appearing_twice("Hello hello world World world.")) == {"hello", "world"}

def test_special_characters_ignored():
    assert set(get_words_appearing_twice("Word's word's punctuation shouldn't affect affect count.")) == {"affect"}
```
<|Test End|>