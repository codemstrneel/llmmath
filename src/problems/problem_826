QUESTION

Create a function that returns whether there exists an element in the array such that when added to another element, the result is within a specified range.

SOL & TESTS

To solve this problem, we will create a function that accepts an array of integers and a specified range (low and high). The function will return `True` if there exist any two distinct elements in the array such that their sum lies within the given range; otherwise, it will return `False`.

Here is the solution along with the unit tests:

<|Solution Begin|>
```python
def exists_sum_in_range(arr, low, high):
    """
    Returns True if there exist two distinct elements in the array whose sum is within the specified range (inclusive).
    """
    arr.sort()  # Sort the array to use two pointer technique
    left, right = 0, len(arr) - 1
    
    while left < right:
        _sum = arr[left] + arr[right]
        if low <= _sum <= high:
            return True
        if _sum < low:
            left += 1
        else:
            right -= 1
    return False
```
<|Solution End|>
<|Test Begin|>
```python
from solution import exists_sum_in_range

def test_exists_sum_in_range_found():
    # 2 + 5 = 7 which is within the range [6, 8]
    assert exists_sum_in_range([2, 4, 5, 11], 6, 8) == True

def test_exists_sum_in_range_not_found():
    # No pair has a sum within [20, 25]
    assert exists_sum_in_range([3, 5, 9, 13], 20, 25) == False

def test_exists_sum_in_range_exact_bounds():
    # 3 + 4 = 7 which is on the exact lower bound of [7, 10]
    assert exists_sum_in_range([1, 2, 3, 4, 5], 7, 10) == True

def test_exists_sum_in_range_single_element():
    # Array with single element can't form a pair
    assert exists_sum_in_range([5], 2, 4) == False

def test_exists_sum_in_range_empty_array():
    # Empty array can't form a pair
    assert exists_sum_in_range([], 0, 1) == False

def test_exists_sum_in_range_large_numbers():
    # 1000000 + 999999 = 1999999 which is within the range [1999998, 2000000]
    assert exists_sum_in_range([1000000, 999999, 2, 3], 1999998, 2000000) == True
```
<|Test End|>