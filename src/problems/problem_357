QUESTION

Write a function to sort the given array without using any sorting algorithm. The given array consists of only 0, 1, and 2. Additionally, the function should perform the sorting in a single pass through the array and should not use any additional data structures for storing the elements during the process other than a few constant extra variables.

SOL & TESTS

<|Solution Begin|>```python
def dutch_national_flag_sort(arr):
    """
    Sorts an array consisting of 0s, 1s, and 2s in a single pass.
    This function uses the Dutch National Flag algorithm.
    
    Parameters:
    arr (list): The list of integers (0, 1, 2) to be sorted.
    
    Returns:
    None: The list is sorted in place.
    """
    low, mid, high = 0, 0, len(arr) - 1

    while mid <= high:
        if arr[mid] == 0:
            arr[low], arr[mid] = arr[mid], arr[low]
            low += 1
            mid += 1
        elif arr[mid] == 1:
            mid += 1
        else:  # arr[mid] == 2
            arr[mid], arr[high] = arr[high], arr[mid]
            high -= 1
```
<|Solution End|>

<|Test Begin|>```python
from solution import dutch_national_flag_sort

def test_sort_all_zeros():
    arr = [0, 0, 0, 0]
    dutch_national_flag_sort(arr)
    assert arr == [0, 0, 0, 0]

def test_sort_all_ones():
    arr = [1, 1, 1, 1]
    dutch_national_flag_sort(arr)
    assert arr == [1, 1, 1, 1]

def test_sort_all_twos():
    arr = [2, 2, 2, 2]
    dutch_national_flag_sort(arr)
    assert arr == [2, 2, 2, 2]

def test_sort_already_sorted():
    arr = [0, 1, 2]
    dutch_national_flag_sort(arr)
    assert arr == [0, 1, 2]

def test_sort_reverse_sorted():
    arr = [2, 1, 0]
    dutch_national_flag_sort(arr)
    assert arr == [0, 1, 2]

def test_sort_mixed():
    arr = [2, 0, 1, 2, 1, 0]
    dutch_national_flag_sort(arr)
    assert arr == [0, 0, 1, 1, 2, 2]

def test_sort_single_element():
    arr = [0]
    dutch_national_flag_sort(arr)
    assert arr == [0]
    arr = [1]
    dutch_national_flag_sort(arr)
    assert arr == [1]
    arr = [2]
    dutch_national_flag_sort(arr)
    assert arr == [2]

def test_sort_two_elements():
    arr = [0, 2]
    dutch_national_flag_sort(arr)
    assert arr == [0, 2]

def test_sort_larger_array():
    arr = [0, 2, 1, 0, 1, 2, 1, 0, 2, 1]
    dutch_national_flag_sort(arr)
    assert arr == sorted(arr)

def test_sort_empty_array():
    arr = []
    dutch_national_flag_sort(arr)
    assert arr == []

```
<|Test End|>