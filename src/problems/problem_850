QUESTION

Write a function to find the minimum number of platforms required for a railway/bus station, and ensure your solution can handle up to 10,000 arrivals and departures within a time limit of 1 second.

SOL & TESTS

<|Solution Begin|> 
```python
def find_minimum_platforms(arrivals, departures):
    """
    Calculate the minimum number of platforms required given arrays of train arrivals and departures.
    
    Parameters:
        arrivals (list of int): A list of integer times when trains arrive.
        departures (list of int): A list of integer times when trains depart.
        
    Returns:
        int: The minimum number of platforms needed.
    """
    assert len(arrivals) == len(departures), "The number of arrivals and departures must be equal."

    # Sort arrival and departure times
    arrivals.sort()
    departures.sort()

    n = len(arrivals)
    platform_needed = 0
    max_platforms = 0

    i = 0
    j = 0

    # Traverse arrival and departure arrays
    while i < n and j < n:
        # If next event is an arrival, increment platform count
        if arrivals[i] <= departures[j]:
            platform_needed += 1
            i += 1

            # Update max_platforms if needed
            max_platforms = max(max_platforms, platform_needed)
        # Else, decrement platform count
        else:
            platform_needed -= 1
            j += 1

    return max_platforms
```
<|Solution End|>

<|Test Begin|>
```python
from solution import find_minimum_platforms

def test_find_minimum_platforms_basic():
    assert find_minimum_platforms([900, 940, 950, 1100, 1500, 1800], [910, 1200, 1120, 1130, 1900, 2000]) == 3

def test_find_minimum_platforms_no_overlap():
    assert find_minimum_platforms([900, 1100, 1500], [930, 1130, 1530]) == 1

def test_find_minimum_platforms_all_overlap():
    assert find_minimum_platforms([900, 900, 900], [910, 910, 910]) == 3

def test_find_minimum_platforms_varied_times():
    assert find_minimum_platforms([200, 210, 300, 320, 350, 500], [230, 340, 320, 430, 400, 520]) == 2

def test_find_minimum_platforms_large_input():
    # Generate test data
    arrivals = list(range(1000, 11000, 10))
    departures = list(range(1005, 11005, 10))
    
    # In this case, each train needs its own platform
    assert find_minimum_platforms(arrivals, departures) == 500
```
<|Test End|>