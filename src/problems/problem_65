QUESTION

Create a Python function that takes a list of tuples and a dictionary as input. Each tuple contains a mix of integers and strings, while the dictionary has string keys and integer values. For each tuple, first remove any duplicate elements while preserving the order of their first occurrence. Then, replace any integer in each tuple with the corresponding value from the dictionary if a matching string key exists. If no match is found, leave the integer as is. Finally, return a sorted list of all strings extracted from the modified tuples, sorted in alphabetical order.

SOLUTION/TESTS

<|Solution Begin|>
def solution(tuples, dictionary):
    """
    This function processes a list of tuples. For each tuple, it removes duplicates while preserving 
    the order of first occurrence. Then it replaces any integer with the corresponding value from a 
    provided dictionary if a matching string key exists. Finally, it returns all unique strings from 
    the modified tuples, sorted in alphabetical order.
    
    :param tuples: List of tuples containing integers and strings.
    :param dictionary: Dictionary with string keys and integer values.
    :return: Sorted list of strings extracted from the modified tuples.
    """
    all_strings = set()
    
    for tuple_ in tuples:
        seen = set()
        modified_tuple = []
        
        for item in tuple_:
            if isinstance(item, int):
                # Attempt to replace the integer if matches a key in the dictionary
                item = dictionary.get(item, item)
            
            if item not in seen:
                seen.add(item)
                modified_tuple.append(item)
                
        # Extract strings into the result set
        all_strings.update([item for item in modified_tuple if isinstance(item, str)])
    
    return sorted(all_strings)

<|Solution End|>
<|Test Begin|>
from solution import solution

def test_no_duplicates():
    tuples = [(1, 'a', 2, 'b')]
    dictionary = {1: 10, 2: 20}  # This dictionary should replace 1 and 2 with 10 and 20
    assert solution(tuples, dictionary) == ['a', 'b']

def test_with_duplicates():
    tuples = [(1, 'a', 'a', 1, 'b', 2)]
    dictionary = {1: 100, 2: 200}
    assert solution(tuples, dictionary) == ['a', 'b']

def test_mixed_replacement():
    tuples = [(1, 'a', 'a', 3, 'b')]
    dictionary = {1: 100, 2: 200}
    assert solution(tuples, dictionary) == ['a', 'b']

def test_no_replacement():
    tuples = [(3, 'c'), (4, 'd')]
    dictionary = {1: 10, 2: 20}
    assert solution(tuples, dictionary) == ['c', 'd']

def test_empty_tuple():
    tuples = [()]
    dictionary = {1: 10}
    assert solution(tuples, dictionary) == []

def test_empty_dictionary():
    tuples = [(1, 'a', 2, 3, 'b')]
    dictionary = {}
    assert solution(tuples, dictionary) == ['a', 'b']

def test_complex_cases():
    tuples = [(1, 'a', 'b', 2, 'd'), (2, 'a', 3, 'c')]
    dictionary = {2: 200, 1: 150}
    assert solution(tuples, dictionary) == ['a', 'b', 'c', 'd']

<|Test End|>