QUESTION

Write a Python function to find the sum of an array where the array can contain both integers and floating-point numbers, and return the result rounded to the nearest integer.

SOL & TESTS

<|Solution Begin|>
```python
def sum_and_round(array):
    """
    Returns the sum of an array of numbers, with the result rounded to the nearest integer.

    :param array: List of integers and/or floats
    :return: Integer sum of the array, rounded to the nearest integer
    """
    total_sum = sum(array)
    return round(total_sum)
```
<|Solution End|>
<|Test Begin|>
```python
from solution import sum_and_round

def test_sum_and_round_empty_list():
    assert sum_and_round([]) == 0

def test_sum_and_round_all_integers():
    assert sum_and_round([1, 2, 3, 4]) == 10

def test_sum_and_round_all_floats():
    assert sum_and_round([1.1, 2.2, 3.3, 4.4]) == 11

def test_sum_and_round_mixed_numbers():
    assert sum_and_round([1, 2.5, 3, 4.4]) == 11

def test_sum_and_round_negative_numbers():
    assert sum_and_round([-1, -2.5, -3, -4.4]) == -11

def test_sum_and_round_mixed_sign_numbers():
    assert sum_and_round([-1, 2.5, 3, -4.4]) == 0

def test_sum_and_round_rounding_down():
    assert sum_and_round([1.4, 2.1, 3.1, 4.2]) == 11

def test_sum_and_round_rounding_up():
    assert sum_and_round([1.6, 2.8, 3.5, 4.3]) == 13
```
<|Test End|>