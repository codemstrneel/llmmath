QUESTION

Create a Python function that calculates the sum of all even numbers within a specified range \( l \) to \( r \), inclusive. The function should return this sum. Assume the input to the function includes two integers \( l \) and \( r \).

SOL & TESTS

<|Solution Begin|>
```python
def sum_of_evens(l, r):
    """
    Calculate the sum of all even numbers between l and r (inclusive).
    
    Parameters:
    l (int): The start of the range.
    r (int): The end of the range.
    
    Returns:
    int: The sum of all even numbers within the range [l, r].
    """
    sum_even = 0
    for num in range(l, r + 1):
        if num % 2 == 0:
            sum_even += num
    return sum_even
```
<|Solution End|>

<|Test Begin|>
```python
from solution import sum_of_evens

def test_sum_of_evens_all_even():
    # All numbers are even
    assert sum_of_evens(2, 10) == 30  # 2+4+6+8+10

def test_sum_of_evens_mixed():
    # Mixed even and odd numbers
    assert sum_of_evens(1, 5) == 6  # 2+4

def test_sum_of_evens_all_odd():
    # Only odd numbers in range
    assert sum_of_evens(3, 7) == 10  # 4+6

def test_sum_of_evens_single_even():
    # Only one even number in range
    assert sum_of_evens(6, 6) == 6

def test_sum_of_evens_single_odd():
    # Only one odd number in range
    assert sum_of_evens(7, 7) == 0

def test_sum_of_evens_negative_range():
    # Range includes negative and positive numbers
    assert sum_of_evens(-5, 5) == 0  # -4+(-2)+0+2+4

def test_sum_of_evens_negative_only():
    # Only negative numbers
    assert sum_of_evens(-8, -2) == -20  # -8 + -6 + -4 + -2

def test_sum_of_evens_zero_range():
    # l and r are both zero
    assert sum_of_evens(0, 0) == 0
```
<|Test End|>