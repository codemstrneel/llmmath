QUESTION

Write a function to remove an empty tuple from a list of tuples, and extend the function to also remove any tuple containing only `None` values from the list.

SOL & TESTS

<|Solution Begin|>
```python
def remove_empty_and_none_tuples(lst):
    """
    Removes empty tuples and tuples containing only None values from the given list.
    
    Args:
    lst: A list of tuples.
    
    Returns:
    A list with empty tuples and tuples containing only None values removed.
    """
    return [t for t in lst if t and any(ele is not None for ele in t)]
```
<|Solution End|>

<|Test Begin|>
```python
def test_remove_empty_and_none_tuples():
    assert remove_empty_and_none_tuples([(1, 2), (), (None,), (3, None), (None, None)]) == [(1, 2), (3, None)]
    assert remove_empty_and_none_tuples([(), (None,), (None, None), (0, None)]) == [(0, None)]
    assert remove_empty_and_none_tuples([(None, 'a'), (2, 3), (), (None, None, None)]) == [(None, 'a'), (2, 3)]
    assert remove_empty_and_none_tuples([(None,), (None, None, None)]) == []
    assert remove_empty_and_none_tuples([]) == []
    assert remove_empty_and_none_tuples([(1, 2, 3), (4, None, 5), ()]) == [(1, 2, 3), (4, None, 5)]
    assert remove_empty_and_none_tuples([(None, 1), (None,)] * 1000) == [(None, 1)] * 1000
```
<|Test End|>