QUESTION

Write a function to find numbers divisible by m or n from a list of numbers using a lambda function. Additionally, the function should return these numbers in a sorted list without duplicates.

SOLUTION/TESTS

<|Solution Begin|>
def solution(numbers, m, n):
    """
    Returns a sorted list of numbers from the input list that are divisible by m or n without duplicates.
    """
    divisible_numbers = set(filter(lambda x: x % m == 0 or x % n == 0, numbers))
    return sorted(divisible_numbers)
<|Solution End|>
<|Test Begin|>
def test_solution_all_divisible():
    assert solution([6, 12, 15, 18], 3, 6) == [6, 12, 15, 18]

def test_solution_no_divisible():
    assert solution([1, 2, 5, 7], 3, 6) == []

def test_solution_some_divisible():
    assert solution([2, 3, 4, 5, 6, 7, 8, 9, 10, 12], 2, 5) == [2, 4, 5, 6, 8, 10, 12]

def test_solution_mix_pos_neg():
    assert solution([-10, -5, 0, 5, 10], 2, 5) == [-10, -5, 0, 5, 10]

def test_solution_with_duplicates():
    assert solution([6, 12, 12, 15, 18, 18, 12, 6], 3, 6) == [6, 12, 15, 18]

def test_solution_empty_list():
    assert solution([], 3, 5) == []

def test_solution_single_element():
    assert solution([12], 2, 3) == [12]
    assert solution([13], 2, 3) == []
<|Test End|>