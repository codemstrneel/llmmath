```python
import re
from typing import List, Tuple

def solution(s: str, arr: List[int], target: int) -> Tuple[bool, Tuple[int, int, int]]:
    # String Analysis
    alphabets = sum(c.isalpha() for c in s)
    digits = sum(c.isdigit() for c in s)
    special = sum(not c.isalnum() for c in s)
    is_valid_email = bool(re.fullmatch(r"[^@]+@[^@]+\.[^@]+", s))
    
    # Array Analysis
    can_sort_corners = arr[0] <= arr[-1] or arr[-1] <= arr[0]
    
    def has_triplet_with_sum(arr: List[int], target: int) -> bool:
        arr.sort()
        for i in range(len(arr) - 2):
            left, right = i + 1, len(arr) - 1
            while left < right:
                current_sum = arr[i] + arr[left] + arr[right]
                if current_sum == target:
                    return True
                elif current_sum < target:
                    left += 1
                else:
                    right -= 1
        return False
    
    triplet_exists = has_triplet_with_sum(arr, target)
    
    return is_valid_email, (alphabets, digits, special), can_sort_corners, triplet_exists
```