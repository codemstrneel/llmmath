```python
def solution(int_list, sentence):
    from bisect import bisect_left
    
    even_diff_sequences = []
    current_sequence = []
    
    for i in range(len(int_list) - 1):
        if (int_list[i + 1] - int_list[i]) % 2 == 0:
            if not current_sequence:
                current_sequence.append(int_list[i])
            current_sequence.append(int_list[i + 1])
        else:
            if current_sequence:
                even_diff_sequences.append(current_sequence)
                current_sequence = []
    
    if current_sequence:
        even_diff_sequences.append(current_sequence)
    
    count_even_length_words = sum(1 for word in sentence.split() if len(word) % 2 == 0)
    
    positions_to_insert = []
    for seq in even_diff_sequences:
        seq_sum = sum(seq)
        pos = bisect_left(sorted(int_list), seq_sum)
        positions_to_insert.append(pos)
    
    return even_diff_sequences, count_even_length_words, positions_to_insert
```