```python
def int_to_roman(num):
    val = [
        1000, 900, 500, 400,
        100, 90, 50, 40,
        10, 9, 5, 4,
        1
    ]
    syms = [
        "M", "CM", "D", "CD",
        "C", "XC", "L", "XL",
        "X", "IX", "V", "IV",
        "I"
    ]
    roman_num = ''
    i = 0
    while num > 0:
        for _ in range(num // val[i]):
            roman_num += syms[i]
            num -= val[i]
        i += 1
    return roman_num

def solution(bases, heights, tuples):
    if not bases or not heights or len(bases) != len(heights):
        return {}
    
    areas = [(base * height) / 2 for base, height in zip(bases, heights)]
    even_areas = [area for area in areas if area % 2 == 0]
    
    result = {}
    for a, b in tuples:
        k = (a + b) % len(areas) if areas else 1
        modified_areas = [area for i, area in enumerate(areas) if (i + 1) % k != 0]
        
        if even_areas:
            key = int_to_roman(sum(bases))
            result[key] = modified_areas
    
    return result
```