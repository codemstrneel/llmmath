```python
def solution(tuples_list):
    from collections import defaultdict
    import sympy

    def is_lucky(s):
        vowels = sum(c in 'aeiou' for c in s)
        consonants = len(s) - vowels
        return vowels % 2 == 1 and vowels > consonants

    frequency = defaultdict(int)
    lucky_count = 0

    for s, n in tuples_list:
        if sympy.isprime(n):
            for i in range(len(s)):
                for j in range(i + 1, len(s) + 1):
                    substring = s[i:j]
                    frequency[substring] += 1
                    if is_lucky(substring):
                        lucky_count += 1

    if not frequency:
        return {
            "frequent_substring": "",
            "lucky_substring_count": 0,
            "modified_frequent_substring": ""
        }

    frequent_substring = min((substr for substr in frequency if frequency[substr] == max(frequency.values())), default="")
    modified_frequent_substring = frequent_substring[::-1] if is_lucky(frequent_substring) else frequent_substring

    return {
        "frequent_substring": frequent_substring,
        "lucky_substring_count": lucky_count,
        "modified_frequent_substring": modified_frequent_substring
    }
```