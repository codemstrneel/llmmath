```python
def solution(dict_list, sentence, delimiter):
    from collections import defaultdict
    
    highest_dict = max(dict_list, key=lambda d: (d['letter'], d['number']))
    
    palindromes = list(filter(lambda x: len(x) >= 3 and x == x[::-1], 
                              [d['text'] for d in dict_list]))
    
    unique_numbers = set(d['number'] for d in dict_list)
    odd_numbers = [str(num) for num in unique_numbers if num & 1]
    concatenated_odds = delimiter.join(odd_numbers)
    
    def is_alternating(s):
        return all(s[i] != s[i + 1] for i in range(len(s) - 1))

    longest_alternating_palindrome = ""
    for pal in palindromes:
        if pal in sentence:
            substrings = [s for s in sentence.split() if pal in s]
            for sub in substrings:
                if is_alternating(sub):
                    if len(sub) > len(longest_alternating_palindrome):
                        longest_alternating_palindrome = sub
    
    return {
        'highest_letter_dict': highest_dict,
        'palindromes': palindromes,
        'concatenated_odds': concatenated_odds,
        'longest_alternating_substring': longest_alternating_palindrome
    }
```