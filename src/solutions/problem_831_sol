```python
import re
from collections import defaultdict

def solution(schedule: str, time_slots: list, n: int):
    activities = re.findall(r'(\d+)([A-Za-z]+)', schedule)
    activities = [(int(start), name) for start, name in activities if int(start) in time_slots]
    
    activities.sort(key=lambda x: (x[0], x[1]))
    
    platforms = []
    activity_map = defaultdict(list)
    for start, name in activities:
        placed = False
        for platform in platforms:
            if platform[-1][0] <= start:
                platform.append((start, name))
                placed = True
                break
        if not placed:
            platforms.append([(start, name)])
    
    min_platforms = len(platforms)
    
    transformed_names = []
    for platform in platforms:
        activity_names = ''.join(name for _, name in platform)
        if len(activity_names) > n:
            split_names = re.findall(r'[A-Z][a-z]*', activity_names)
            transformed_names.extend(split_names)
        else:
            transformed_names.append(activity_names)
    
    output_platforms = [{"time_slot": platform[0][0], "activities": [name for _, name in platform]} for platform in platforms]
    
    return (min_platforms, output_platforms, transformed_names)
```