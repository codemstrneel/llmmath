```python
def solution(expression):
    import re
    
    stack = []
    balanced = True
    patterns = []
    
    matching_patterns = re.finditer(r'\(a.*?b\)|\[a.*?b\]|\{a.*?b\}', expression)
    
    for char in expression:
        if char in '([{':
            stack.append(char)
        elif char in ')]}':
            if not stack:
                balanced = False
                break
            top = stack.pop()
            if (top == '(' and char != ')') or (top == '[' and char != ']') or (top == '{' and char != '}'):
                balanced = False
                break
    
    if stack:
        balanced = False
    
    patterns = [match.group() for match in matching_patterns]
    
    return (balanced, patterns)
```