```python
def solution(float_list, text, sorted_array, threshold):
    import numpy as np
    
    def find_anomalous_sublists(float_list, threshold):
        sublists = []
        start = 0
        while start < len(float_list) - 1:
            end = start
            while end < len(float_list) - 1 and abs(float_list[end + 1] - float_list[end]) <= threshold:
                end += 1
            if end > start:
                sublists.append(float_list[start:end + 1])
            start = end + 1
        return sublists

    def count_odd_word_sentences(text):
        sentences = text.split('.')
        return sum(1 for sentence in sentences if len(sentence.split()) % 2 == 1)

    def get_insert_positions(medians, sorted_array):
        positions = []
        for median in medians:
            pos = next((i for i, x in enumerate(sorted_array) if x > median), len(sorted_array))
            positions.append(pos)
        return positions

    anomalous_sublists = find_anomalous_sublists(float_list, threshold)
    medians = [np.median(sublist) for sublist in anomalous_sublists]
    count_odd_sentences = count_odd_word_sentences(text)
    insert_positions = get_insert_positions(medians, sorted_array)

    return (anomalous_sublists, count_odd_sentences, insert_positions)
```