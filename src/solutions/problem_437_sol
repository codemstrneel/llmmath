```python
import re
from collections import defaultdict
import math

def solution(tuple_list, input_string):
    filtered_tuples = []
    all_numbers = []
    
    for s, n in tuple_list:
        if n > 0 and s:
            filtered_string = ''.join(sorted(set(s), key=s.index))
            filtered_tuples.append((filtered_string, n))
            all_numbers.append(math.ceil(n))
    
    modified_string = re.sub(r'\d+', '###', input_string)
    has_valid_email = bool(re.search(r'@[\w.-]+\.[a-zA-Z]{2,}$', modified_string))
    
    rounded_sum = sum(all_numbers)
    
    sequences = []
    differences = defaultdict(list)
    if all_numbers:
        current_sequence = [all_numbers[0]]
        
        for i in range(1, len(all_numbers)):
            if all_numbers[i] == all_numbers[i - 1] + 1:
                current_sequence.append(all_numbers[i])
            else:
                if len(current_sequence) > 1:
                    sequences.append(current_sequence)
                    for j in range(1, len(current_sequence)):
                        differences[current_sequence[0]].append(current_sequence[j] - current_sequence[j - 1])
                current_sequence = [all_numbers[i]]
        
        if len(current_sequence) > 1:
            sequences.append(current_sequence)
            for j in range(1, len(current_sequence)):
                differences[current_sequence[0]].append(current_sequence[j] - current_sequence[j - 1])
    
    return (filtered_tuples, modified_string, has_valid_email, {"rounded_sum": rounded_sum, "consecutive_differences": dict(differences)})
```