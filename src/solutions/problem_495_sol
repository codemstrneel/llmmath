```python
def solution(input_str):
    parts = input_str.split(";")
    coeffs = list(map(float, parts[0].split()))
    integers = list(map(int, parts[1].split()))
    
    def has_symmetric_roots(a, b, c, d):
        # For the roots to be symmetric around the y-axis:
        return (b == 0)
    
    is_symmetric = has_symmetric_roots(coeffs[0], coeffs[1], coeffs[2], coeffs[3])
    
    def longest_consecutive_subsequence(arr):
        if not arr:
            return 0
        arr = sorted(set(arr))
        longest_streak = 1
        current_streak = 1
        
        for i in range(1, len(arr)):
            if arr[i] == arr[i - 1] + 1:
                current_streak += 1
            else:
                longest_streak = max(longest_streak, current_streak)
                current_streak = 1
        
        return max(longest_streak, current_streak)
    
    longest_subseq_length = longest_consecutive_subsequence(integers)
    
    return {
        'is_symmetric': is_symmetric,
        'longest_consecutive_subsequence': longest_subseq_length
    }
```