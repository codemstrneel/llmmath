```python
import re
import heapq
from typing import List, Tuple

def solution(strings: List[str], int_lists: List[List[int]]) -> List[Tuple[int, int]]:
    cleaned_lengths = [len(re.sub(r'\s+', ' ', s.strip())) for s in strings]
    
    min_heap = []
    for lst in int_lists:
        if len(lst) > 1:
            products = list(map(lambda x: lst[x] * lst[x+1], range(len(lst) - 1)))
            for product in products:
                heapq.heappush(min_heap, product)
    
    n = len(cleaned_lengths)
    smallest_products = [heapq.heappop(min_heap) for _ in range(min(n, len(min_heap)))]
    
    result = list(zip(cleaned_lengths, smallest_products))
    return result
```