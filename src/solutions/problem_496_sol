```python
def solution(s, dates):
    from datetime import datetime

    def count_consonants(s):
        return sum(1 for char in s if char.isalpha() and char.lower() not in 'aeiou')

    date_diff = []
    consonant_count = count_consonants(s)
    
    for date in dates:
        year, month, day = map(int, date.split('-'))
        if month == 8:
            diff = 31 - day if day <= 31 else 31
        else:
            month_days = [31, 29 if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0) else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30]
            diff = month_days[month - 1] - day
        
        date_diff.append(diff)
    
    adjusted_consonant_list = [min(diff, consonant_count) for diff in date_diff]

    def max_consecutive_length(nums):
        if not nums:
            return 0
        nums = sorted(set(nums))
        max_length = 1
        current_length = 1
        
        for i in range(1, len(nums)):
            if nums[i] == nums[i - 1] + 1:
                current_length += 1
            else:
                max_length = max(max_length, current_length)
                current_length = 1
        
        return max(max_length, current_length)

    max_consecutive_subsequence = max_consecutive_length(adjusted_consonant_list)
    
    return {
        "date_diff": date_diff,
        "adjusted_consonant_list": adjusted_consonant_list,
        "max_consecutive_subsequence": max_consecutive_subsequence
    }
```