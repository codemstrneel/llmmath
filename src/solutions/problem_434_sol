```python
import math

def solution(data):
    distinct_integers = set()
    string_summary = {}
    unique_unicode_values = set()

    for item in data:
        if isinstance(item, (int, float)):
            distinct_integers.add(round(item))
        elif isinstance(item, str):
            for char in item:
                string_summary[char] = string_summary.get(char, 0) + ord(char)
                unique_unicode_values.add(ord(char))

    odd_integers = sorted([x for x in distinct_integers if x % 2 != 0], reverse=True)
    min_value = float('inf')
    
    for x in odd_integers:
        value = math.cos(x) - math.sin(3 * x)
        if value < min_value:
            min_value = value

    unique_unicode_values = sorted(unique_unicode_values)
    subsequence_lengths = []
    current_length = 1

    for i in range(1, len(unique_unicode_values)):
        if unique_unicode_values[i] == unique_unicode_values[i - 1] + 1:
            current_length += 1
        else:
            if current_length > 1:
                subsequence_lengths.append(current_length)
            current_length = 1

    if current_length > 1:
        subsequence_lengths.append(current_length)

    return [{'numeric_info': (odd_integers, min_value)},
            {'string_summary': string_summary},
            {'subsequence_lengths': subsequence_lengths}]
```