```python
def solution(n, r, p):
    def power(x, y, p):
        res = 1
        x = x % p
        while y > 0:
            if (y & 1) == 1:
                res = (res * x) % p
            y = y >> 1
            x = (x * x) % p
        return res

    def mod_inverse(a, p):
        return power(a, p - 2, p)

    if r > n:
        return 0
    if r == 0 or r == n:
        return 1
    
    # Calculate n! % p
    numerator = 1
    for i in range(n, n - r, -1):
        numerator = (numerator * i) % p
    
    # Calculate r! % p
    denominator = 1
    for i in range(1, r + 1):
        denominator = (denominator * i) % p
    
    denominator_inv = mod_inverse(denominator, p)
    
    return (numerator * denominator_inv) % p
```