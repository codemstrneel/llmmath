```python
def solution(data):
    def sum_of_squares(n):
        for i in range(int(n**0.5) + 1):
            for j in range(int(n**0.5) + 1):
                if i*i + j*j == n:
                    return True
        return False
    
    def has_alternating_pattern(s):
        return all(s[i] != s[i+1] for i in range(len(s) - 1))

    result = set()

    for layer in data:
        for row in layer:
            for message in row:
                if len(message) < 3 or message[0] != 'a' or message[-1] != 'b':
                    continue
                
                upper_chars = message[1:-1]
                valid = all(sum_of_squares(ord(c)) for c in upper_chars)
                
                if valid:
                    ascii_sum = sum(ord(c) for c in upper_chars)
                    if ascii_sum % 3 == 0:
                        binary_str = bin(ascii_sum)[2:]
                        if has_alternating_pattern(binary_str):
                            result.add(binary_str)

    return [list(result)]
```